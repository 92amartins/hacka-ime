Author,Title,Year,Link,Affiliation,Abstract,Author Keywords,Index Keywords
Fábio Kon,InterSCity: Addressing Future Internet research challenges for Smart Cities,2017,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015184707&doi=10.1109%2fNOF.2016.7810114&partnerID=40&md5=d1f22c69130ca50afedfa7ba300fc5a3,Universidade de São Paulo - Departamento de Ciência da Computação,"The Future Internet will integrate large-scale systems constructed from the composition of thousands of distributed services, while interacting directly with the physical world via sensors and actuators, which compose the Internet of Things. This Future Internet will enable the realization of the Smart Cities vision, in which the urban infrastructure will be used to its fullest extent to offer a better quality of life for its citizens. Key to the efficient and effective realization of Smart Cities is the scientific and technological research covering the multiple layers that make up the Internet. This paper discusses the research challenges and initiatives related to Future Internet and Smart Cities in the scope of the InterSCity project. The challenges and initiatives are organized in three fronts: (1) Networking and High-Performance Distributed Computing; (2) Software Engineering for the Future Internet; and (3) Analysis and Mathematical Modeling for the Future Internet and Smart Cities. InterSCity aims at developing an integrated open-source platform containing all the major building blocks for the development of robust, integrated, sophisticated applications for the smart cities of the future. © 2016 IEEE.",Big Data; Future Internet; Internet of Things; Machine Learning; Mathematical Modeling; Smart Cities,Big data; Distributed computer systems; Internet of things; Large scale systems; Learning systems; Mathematical models; Open source software; Software engineering; Distributed service; Future internet; High-performance distributed computing; Open source platforms; Research challenges; Sensors and actuators; Technological researches; Urban infrastructure; Smart city
Fábio Kon,InterSCity: A scalable microservice-based open source platform for smart cities,2017,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85025439394&partnerID=40&md5=55358edc06019223fbce5925abc5b39d,Universidade de São Paulo - Departamento de Ciência da Computação,"Smart City technologies emerge as a potential solution to tackle common problems in large urban centers by using city resources efficiently and providing quality services for citizens. Despite the various advances in middleware technologies to support future smart cities, there are no universally accepted platforms yet. Most of the existing solutions do not provide the required flexibility to be shared across cities. Moreover, the extensive use and development of non-open-source software leads to interoperability issues and limits the collaboration among R&D groups. In this paper, we explore the use of a microservices architecture to address key practical challenges in smart city platforms. We present InterSCity, a microservice-based open source smart city platform that aims at supporting collaborative, novel smart city research, development, and deployment initiatives. We discuss how the microservice approach enables a flexible, extensible, and loosely coupled architecture and present experimental results demonstrating the scalability of the proposed platform. © 2017 by SCITEPRESS Science and Technology Publications, Lda. All Rights Reserved.",Microservices; Open source software; Scalability; Smart cities; Software platform,Middleware; Open source software; Open systems; Scalability; Software engineering; Loosely coupled architectures; Microservices; Middleware technology; Open source platforms; Open sources; Quality services; Software platforms; Urban centers; Smart city
Fábio Kon,Dynamic resource allocation using performance forecasting,2016,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991716612&doi=10.1109%2fHPCSim.2016.7568311&partnerID=40&md5=8bcad2435ce577712d8aa077cf254139,Universidade de São Paulo - Departamento de Ciência da Computação,"To benefit from the performance gains and cost savings enabled by elasticity in cloud IaaS environments, effective automated mechanisms for scaling are essential. This automation requires monitoring system status and defining criteria to trigger allocation and deallocation of resources. While these criteria are usually based upon resource utilization, this may be inadequate due to the impossibility of identifying the actual amount of required resources. Consequently, most systems update resource allocation in small increments, e.g., one VM at a time, which may negatively affect performance and cost. In this paper, we propose a novel approach in which the system monitors workload, instead of utilization, and, by means of a scalability model, it makes predictions of resource demand and updates the allocated resources accordingly. We provide an implementation of this approach and describe experimental results that show its effectiveness. © 2016 IEEE.",,Resource allocation; Dynamic resource allocations; Monitoring system; Performance forecasting; Performance Gain; Resource demands; Resource utilizations; Scalability modeling; System monitors; Monitoring
Fábio Kon,Hadoop energy consumption reduction with hybrid HDFS,2016,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975867913&doi=10.1145%2f2851613.2851623&partnerID=40&md5=0fce70d5eca5f6ceaa37bf26ad8aa622,Universidade de São Paulo - Departamento de Ciência da Computação,"Apache Hadoop has evolved significantly over the last years, with more than 60 releases bringing new features. By implementing the MapReduce programming paradigm and leveraging HDFS, its distributed file system, Hadoop has become a reliable and fault tolerant middleware for parallel and distributed computing over large datasets. Nevertheless, Hadoop may struggle under certain workloads, resulting in poor performance and high energy consumption. Users increasingly demand that high performance computing solutions address sustainability and limit energy consumption. In this paper, we introduce HDFSH, a hybrid storage mechanism for HDFS, which uses a combination of Hard Disks and Solid-State Disks to achieve higher performance while saving power in Hadoop computations. HDFSH brings to the middleware the best from HDs (affordable cost per GB and high storage capacity) and SSDs (high throughput and low energy consumption) in a configurable fashion, using dedicated storage zones for each storage device type. We implemented our mechanism as a block placement policy for HDFS, and assessed it over six recent releases of Hadoop with different architectural properties. Results indicate that our approach increases overall job performance while decreasing the energy consumption under most hybrid configurations evaluated. Our results also showed that, in many cases, storing only part of the data in SSDs results in significant energy savings and execution speedups.",Energy consumption; Hadoop; HDFS; Hybrid storage,Computer software; Digital storage; Energy conservation; Energy utilization; File organization; Hard disk storage; Middleware; Virtual storage; Architectural properties; Distributed file systems; Hadoop; HDFS; High energy consumption; High performance computing; Hybrid storages; Parallel and distributed computing; Distributed computer systems
Fábio Kon,A static change impact analysis approach based on metrics and visualizations to support the evolution of workflow repositories,2016,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969776887&doi=10.4018%2fIJWSR.2016040105&partnerID=40&md5=53914f9b26297bf598342b698535e996,Universidade de São Paulo - Departamento de Ciência da Computação,"In ever-changing business environments, organizations continuously refine their processes to benefit from and meet the constraints of new technology, new business rules, and new market requirements. Workflow management systems (WFMSs) support organizations in evolving their processes by providing them with technological mechanisms to design, enact, and monitor workflows. However, workflows repositories often grow and start to encompass a variety of interdependent workflows. Without appropriate tool support, keeping track of such interdependencies and staying aware of the impact of a change in a workflow schema becomes hard. Workflow designers are often blindsided by changes that end up inducing side- and ripple-effects. This poses threats to the reliability of the workflows and ultimately hampers the evolvability of the workflow repository as a whole. In this paper, the authors introduce a change impact analysis approach based on metrics and visualizations to support the evolution of workflow repositories. They implemented the approach and later integrated it as a module in the HP Operations Orchestration (HP OO) WFMS. The authors conducted an exploratory study in which they thoroughly analyzed the workflow repositories of 8 HP OO customers. They characterized the customer repositories from a change impact perspective and compared them against each other. The authors were able to spot the workflows with high change impact among thousands of workflows in each repository. They also found that while the out-of-the-box repository included in HP OO had 10 workflows with high change impact, customer repositories included 11 (+10%) to 35 (+250%) workflows with this same characteristic. This result indicates the extent to which customers should put additional effort in evolving their repositories. The authors' approach contributes to the body of knowledge on static workflow evolution and complements existing dynamic workflow evolution approaches. Their techniques also aim to help organizations build more flexible and reliable workflow repositories. © 2016, IGI Global.",Change Impact Analysis; Dependency Management; Metrics; Visualizations; Workflow Evolution,Societies and institutions; Visualization; Work simplification; Body of knowledge; Change impact analysis; Changing business environment; Exploratory studies; Market requirements; Metrics; Workflow Evolution; Workflow management systems; Sales
Fábio Kon,Hadoop branching: Architectural impacts on energy and performance,2016,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962815275&doi=10.1109%2fIGCC.2015.7393709&partnerID=40&md5=ed511c63fbf5c63d36350f18f6f07eea,Universidade de São Paulo - Departamento de Ciência da Computação,"Data centers are notorious energy consumers. In fact, studies have shown that for every $1 spent on hardware in the datacenter, $0.50 is spent on powering this hardware over its lifetime. Data centers host real or virtual (i.e., cloud) clusters that often execute large compute jobs using MapReduce, of which Hadoop is a popular implementation. Like other successful open source projects, Hadoop has been maintained and evolved over time with new resource management features being added over time in an effort to improve performance, raising questions as to whether such architectural evolution has achieved its goal, and if so, at what cost. In this work we apply Green Mining to find out that later versions of Hadoop - who exhibit more dynamic resource control - can suffer from serious energy consumption performance regressions. © 2015 IEEE.",,Energy utilization; Architectural evolution; Data centers; Dynamic resource control; Energy consumer; Green mining; Improve performance; Open source projects; Resource management; Hardware
Fábio Kon,Agile usability patterns for user-centered design final stages,2016,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978870619&doi=10.1007%2f978-3-319-39510-4_40&partnerID=40&md5=8dd43a6c5a48894efc5e1dc77e24abbf,Universidade de São Paulo - Departamento de Ciência da Computação,"The integration between Agile Methods and User-Centered Design (UCD) has been addressed by several authors in recent years. Nevertheless, a gap remains regarding a systematically consolidated description of agile usability practices for the final stages of UCD. Our aim is to describe agile usability practices based on the literature in the form of patterns, focusing on the UCD final stages, namely “Create Design Solutions” and “Evaluate Designs”. A literature review was conducted to identify patterns of use of agile usability practices. The major results of the study presented here are the selection and classification of the usability practices for the UCD final stages within the agile community and their structured presentation in the form of patterns (Name, Context, Problem, Solution, and Examples). Presenting agile usability practices as patterns can increase their applicability; it facilitates the visualization of the similarities between the communities of UCD and Agile Methods and also presents the ideas more clearly to other communities that can benefit from using these patterns in their specific development contexts. © Springer International Publishing Switzerland 2016.",Agile UCD; Agile usability; Agile UX; Best practices; Patterns,Design; Human computer interaction; Usability engineering; Agile UCD; Agile usability; Agile UX; Best practices; Patterns; User centered design
Fábio Kon,A hybrid cloud-P2P architecture for multimedia information retrieval on VoD services,2016,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84953360913&doi=10.1007%2fs00607-014-0428-3&partnerID=40&md5=c5006121deffc0ed7c8e67b88f5edf3f,Universidade de São Paulo - Departamento de Ciência da Computação,"Recent research in Cloud Computing and Peer-to-Peer systems for Video-on-Demand (VoD) has focused on multimedia information retrieval, using cloud nodes as video streaming servers and peers as a way to distribute and share the video segments. A key challenge faced by these systems is providing an efficient way to retrieve the information segments descriptor, composed of its metadata and video segments, distributed among the cloud nodes and the Peer-to-Peer (P2P) network. In this paper, we propose a novel Cloud Computing and P2P hybrid architecture for multimedia information retrieval on VoD services that supports random seeking while providing scalability and efficiency. The architecture comprises Cloud and P2P layers. The Cloud layer is responsible for video segment metadata retrieval, using ontologies to improve the relevance of the retrieved information, and for distributing the metadata structures among cloud nodes. The P2P layer is responsible for finding peers that have the physical location of a segment. In this layer, we use trackers, which manage and collect the segments shared among other peers. We also use two Distributed Hash Tables, one to find these trackers and the other to store the information collected in case the tracker leaves the network and another peer needs to replace it. Unlike previous work, our architecture separates cloud nodes and peers responsibilities to manage the video metadata and its segments, respectively. Also, we show via simulations, the possibility of converting any peer to act as a tracker, while maintaining system scalability and performance, avoiding using centralized and powerful servers. © 2014, Springer-Verlag Wien.",Cloud computing; DHT; Peer-to-peer; Video-on-demand,Cloud computing; Image segmentation; Information retrieval; Metadata; Multimedia services; Network architecture; Scalability; Search engines; Video on demand; Video streaming; DHT; Distributed Hash Table; Multimedia information retrieval; On demands; Peer to peer; Peer to Peer (P2P) network; Video streaming servers; Video-on-Demand (VoD); Peer to peer networks
Fábio Kon,Software startups-A research agenda,2016,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994056890&doi=10.5277%2fe-Inf160105&partnerID=40&md5=89c61eded80aca77a370cb12f86d1023,Universidade de São Paulo - Departamento de Ciência da Computação,"Software startup companies develop innovative, software-intensive products within limited time frames and with few resources, searching for sustainable and scalable business models. Software startups are quite distinct from traditional mature software companies, but also from micro-, small-, and medium-sized enterprises, introducing new challenges relevant for software engineering research. This paper's research agenda focuses on software engineering in startups, identifying, in particular, 70+ research questions in the areas of supporting startup engineering activities, startup evolution models and patterns, ecosystems and innovation hubs, human aspects in software startups, applying startup concepts in non-startup environments, and methodologies and theories for startup research. We connect and motivate this research agenda with past studies in software startup research, while pointing out possible future directions. While all authors of this research agenda have their main background in Software Engineering or Computer Science, their interest in software startups broadens the perspective to the challenges, but also to the opportunities that emerge from multi-disciplinary research. Our audience is therefore primarily software engineering researchers, even though we aim at stimulating collaborations and research that crosses disciplinary boundaries. We believe that with this research agenda we cover a wide spectrum of the software startup industry current needs.",Research agenda; Software startup; Software-intensive systems,Software engineering; Disciplinary boundaries; Engineering activities; Medium sized enterprise; Multi-disciplinary research; Research agenda; Research questions; Software intensive systems; Start-up companies; Engineering research
Fábio Kon,Perspectives on software-defined networks: interviews with five leading scientists from the networking community,2015,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945915000&doi=10.1186%2fs13174-015-0035-3&partnerID=40&md5=07ed21675050e9c4f0e03681356da9e4,Universidade de São Paulo - Departamento de Ciência da Computação,"Software defined Networks (SDNs) have drawn much attention both from academia and industry over the last few years. Despite the fact that underlying ideas already exist through areas such as P2P applications and active networks (e.g. virtual topologies and dynamic changes of the network via software), only now has the technology evolved to a point where it is possible to scale the implementations, which justifies the high interest in SDNs nowadays. In this article, the JISA Editors invite five leading scientists from three continents (Raouf Boutaba, David Hutchison, Raj Jain, Ramachandran Ramjee, and Christian Esteve Rothenberg) to give their opinions about what is really new in SDNs. The interviews cover whether big telecom and data center companies need to consider using SDNs, if the new paradigm is changing the way computer networks are understood and taught, and what are the open issues on the topic. © 2015, Batista et al.",Data center; SDN; Virtualization,Application programs; Data centers; Dynamic changes; Networking community; P2P applications; SDN; Software-defined networks; Virtual topologies; Virtualizations; Peer to peer networks
Fábio Kon,Designing a maturity model for software startup ecosystems,2015,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952361503&doi=10.1007%2f978-3-319-26844-6_45&partnerID=40&md5=84aa1a5b7f6ffce5f66ee54c2203a462,Universidade de São Paulo - Departamento de Ciência da Computação,"Resulting from the technological revolution from the last decades, we observed many software startup ecosystems emerging around the globe. Having tech entrepreneurs as their main agents, some ecosystems exist for more than 50 years, while others are newly born. This difference in terms of evolution and maturity makes the task of comparing different tech hubs a challenge. Moreover, nascent ecosystems need a clear vision of how to develop their community to evolve towards a fruitful and sustainable ecosystem. This paper proposes a maturity model for software startup ecosystems based on a multiple case study of two existing ecosystems. By determining the maturity level for each ecosystem, it is possible not only to compare different realities, but mainly to identify gaps and propose customized practical actions that can lead to real improvements in the existing ecosystems, taking it to the next level of development, promoting innovation. © Springer International Publishing Switzerland 2015.",Entrepreneurship; Maturity model; Startup ecosystems,Ecology; Process engineering; Entrepreneurship; Main agent; Maturity levels; Maturity model; Multiple-case study; Sustainable ecosystems; Technological revolution; Ecosystems
Fábio Kon,Using performance forecasting to accelerate elasticity,2015,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955263379&doi=10.1007%2f978-3-319-28448-4_2&partnerID=40&md5=363ab0cc4e83093d3a266473175303e0,Universidade de São Paulo - Departamento de Ciência da Computação,"Cloud computing facilitates dynamic resource provisioning. The automation of resource management, known as elasticity, has been subject to much research. In this context, monitoring of a running service plays a crucial role, and adjustments are made when certain thresholds are crossed. On such occasions, it is common practice to simply add or remove resources. In this paper we investigate how we can predict the performance of a service to dynamically adjust allocated resources based on predictions. In other words, instead of “repairing” because a threshold has been crossed, we attempt to stay ahead and allocate an optimized amount of resources in advance. To do so, we need to have accurate predictive models that are based on workloads. We present our approach, based on the Universal Scalability Law, and discuss initial experiments. © Springer International Publishing Switzerland 2015.",Cloud computing; Elasticity; Performance prediction; Scalability modelling,Cloud computing; Distributed computer systems; Elasticity; Forecasting; Natural resources management; Resource allocation; Scalability; Dynamic resource provisioning; Performance forecasting; Performance prediction; Predictive models; Resource management; Resources based; Scheduling
Fábio Kon,Bringing Test-Driven Development to web service choreographies,2015,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912520833&doi=10.1016%2fj.jss.2014.09.034&partnerID=40&md5=956b66160dea22c407d7e274e22fae57,Universidade de São Paulo - Departamento de Ciência da Computação,"Choreographies are a distributed approach for composing web services. Compared to orchestrations, which use a centralized scheme for distributed service management, the interaction among the choreographed services is collaborative with decentralized coordination. Despite the advantages, choreography development, including the testing activities, has not yet evolved suf.ciently to support the complexity of the large distributed systems. This substantially impacts the robustness of the products and overall adoption of choreographies. The goal of the research described in this paper is to support the Test-Driven Development (TDD) of choreographies to facilitate the construction of reliable, decentralized distributed systems. To achieve that, we present Rehearsal, a framework supporting the automated testing of choreographies at development-time. In addition, we present a choreography development methodology that guides the developer on applying TDD using Rehearsal. To assess the framework and the methodology, we conducted an exploratory study with developers, whose result was that Rehearsal was considered very helpful for the application of TDD and that the methodology helped the development of robust choreographies. © 2014 Elsevier Inc. All rights reserved.",Automated testing; Test-Driven development; Web service choreographies,Social networking (online); Websites; Automated testing; Decentralized coordination; Decentralized distributed systems; Development methodology; Distributed approaches; Distributed service management; Test driven development; Web service choreography; Web services
Fábio Kon,A comprehensive view of Hadoop research - A systematic literature review,2014,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906685792&doi=10.1016%2fj.jnca.2014.07.022&partnerID=40&md5=3c8cd7a2ea0fcd8a25c384dd985a0bba,Universidade de São Paulo - Departamento de Ciência da Computação,"Context: In recent years, the valuable knowledge that can be retrieved from petabyte scale datasets - known as Big Data - led to the development of solutions to process information based on parallel and distributed computing. Lately, Apache Hadoop has attracted strong attention due to its applicability to Big Data processing. Problem: The support of Hadoop by the research community has provided the development of new features to the framework. Recently, the number of publications in journals and conferences about Hadoop has increased consistently, which makes it difficult for researchers to comprehend the full body of research and areas that require further investigation. Solution: We conducted a systematic literature review to assess research contributions to Apache Hadoop. Our objective was to identify gaps, providing motivation for new research, and outline collaborations to Apache Hadoop and its ecosystem, classifying and quantifying the main topics addressed in the literature. Results: Our analysis led to some relevant conclusions: many interesting solutions developed in the studies were never incorporated into the framework; most publications lack sufficient formal documentation of the experiments conducted by authors, hindering their reproducibility; finally, the systematic review presented in this paper demonstrates that Hadoop has evolved into a solid platform to process large datasets, but we were able to spot promising areas and suggest topics for future research within the framework. © 2014 Elsevier Ltd.",Apache Hadoop; HDFS; MapReduce; Survey; Systematic literature review,Computer software; Surveying; Apache Hadoop; Formal documentation; HDFS; Map-reduce; Parallel and distributed computing; Process information; Research communities; Systematic literature review; Big data; Surveying
Fábio Kon,A middleware for reflective web service choreographies on the cloud,2014,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84918567621&doi=10.1145%2f2677017.2677026&partnerID=40&md5=599ddcde7c4ee848f17b6798b7bffd3d,Universidade de São Paulo - Departamento de Ciência da Computação,"Web service composition is a commonly used solution to build distributed systems on the cloud. Choreographies are one specific kind of service composition in which the responsibilities for the execution of the system are shared by its service components without a central point of coordination. Due to the distributed nature of these systems, a manual approach to resource usage monitoring and allocation to maintain the expected Quality of Service (QoS) is not only inefficient but also does not scale. In this paper, we present an open source choreography enactment middleware that is capable of automatically deploying and executing a composition. Additionally, it also monitors the composition execution to perform automatic resource provisioning and dynamic service reconfiguration based on pre-defined Service Level Agreement (SLA) constraints. To achieve that, it keeps a meta-level representation of the compositions, which contains their specifications, deployment statuses, and QoS attributes. Application developers can write specific rules that take into account these meta-data to reason about the performance of the composition and change its behavior. Our middleware was evaluated on Amazon EC2 and our results demonstrate that, with little effort from the choreography developer or deployer, the middleware is able to maintain the established SLA using both horizontal and vertical scaling when faced with varying levels of load. Additionally, it also reduces operational costs by using as little computational resources as possible. Copyright 2014 ACM.",Middleware; QoS; Reection; SOA,Middleware; Quality of service; Social networking (online); Application developers; Computational resources; Reection; Service compositions; Service Level Agreements; SOA; Web service choreography; Web service composition; Web services
Fábio Kon,Agile usability patterns for UCD early stages,2014,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958521652&doi=10.1007%2f978-3-319-07668-3_4&partnerID=40&md5=c3d0e523891d48b014d2f31cd6555aa1,Universidade de São Paulo - Departamento de Ciência da Computação,"The integration between agile methods and UCD has been addressed by several authors in recent years. However, a gap remains regarding how the practices have been described, lacking a standard that both designers and agile practitioners can understand and apply. This study aims to propose agile usability patterns based on the literature, with a focus on the User-Centered Design early stages. The goal of the proposed patterns is to facilitate the use of the best agile usability practices by identifying more clearly in which context the pattern can be applied, and what is the problem that each pattern solves, presenting examples. © 2014 Springer International Publishing Switzerland.",agile UCD; agile usability; agile UX; best practices; patterns,Design; agile UCD; agile usability; agile UX; Best practices; patterns; Usability engineering
Fábio Kon,Deploying large-scale service compositions on the cloud with the CHOReOS enactment engine,2014,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911089706&doi=10.1109%2fNCA.2014.25&partnerID=40&md5=f3927483e1ac2795e03574c2c82360b0,Universidade de São Paulo - Departamento de Ciência da Computação,"In recent years, service-oriented systems are becoming increasingly complex, with growing size and heterogeneity. Developing and deploying such large-scale systems present several challenges, such as reliability, reproducibility, handling failures on infrastructure, scaling deployment time as composition size grows, coordinating deployment among multiple organizations, dependency management, and supporting requirements of adaptable systems. However, many organizations still rely on manual deployment processes, which imposes difficulties in overcoming such challenges. In this paper, we propose a flexible and extensible middleware solution that addresses the challenges present in the large-scale deployment of service compositions. The CHOReOS Enactment Engine is a robust middleware infrastructure to automate the deployment of large-scale service compositions. We describe the middleware architecture and implementation and then present experimental results demonstrating the feasibility of our approach. © 2014 IEEE.",automated deployment; cloud computing; service compositions,Cloud computing; Complex networks; Engines; automated deployment; Deployment process; Large-scale deployment; Middleware architecture; Middleware infrastructure; Multiple organizations; Service compositions; Service Oriented Systems; Middleware
Fábio Kon,"The evolution of agile software development in Brazil: Education, research, and the state-of-the-practice",2013,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893080615&doi=10.1007%2fs13173-013-0114-x&partnerID=40&md5=5fafd27d8b95f30b61475531849f47ba,Universidade de São Paulo - Departamento de Ciência da Computação,"Agile software development methods have been increasingly adopted worldwide and became one of the mainstream software development approaches. Agile methods have also had an impact on software engineering education with universities adapting their courses to accommodate this new form of software development. Software engineering research has tried to evaluate the impact of agile methods in industrial projects and discover in which situations it is beneficial to apply such methods. However, there are almost no studies focusing on the progress of the agile movement in Brazil. In this paper, we present an overview of the evolution of the agile movement in Brazil, outlining the history of its first advocates in academia and industry. We describe existing educational initiatives, discuss the impact of the agile development on the national research, and present a report on the agile state-of-the-practice in the Brazilian IT industry. © 2013 The Brazilian Computer Society.",Agile educational initiatives; Agile software development; Brazilian agile research; Brazilian agile state-of-the-practice; History of computing; Object-oriented programming,Agile development; Agile educational initiatives; Agile movement; Agile software development; Brazilian agile state-of-the-practice; History of computing; Industrial projects; Software development approach; Education; Industry; Object oriented programming; Software design; Industrial research
Fábio Kon,Automated scalability testing of software as a service,2013,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885009875&doi=10.1109%2fIWAST.2013.6595784&partnerID=40&md5=3bf22675df8ae92e3d5e936833c4259f,Universidade de São Paulo - Departamento de Ciência da Computação,"Scalability has been studied in several areas of Computer Science and scalability testing and evaluation of contemporary software systems is an active topic. However, most of the times, these activities are still performed in a predominantly ad hoc fashion. There are a few tools to automate this process, but they present several restrictions about what systems can be tested and how to evaluate scalability. In this paper, we introduce a flexible and extensible framework for automated scalability testing of software offered as a service and propose to evaluate the scalability using hypothesis tests. Additionally, we argue that, instead of stating if a system is scalable or not, we should find out how it could scale better. © 2013 IEEE.",,Extensible framework; Hypothesis tests; Software systems; Testing and evaluation; Automation; Scalability; Software as a service (SaaS); Software testing
Fábio Kon,A systematic literature review of service choreography adaptation,2013,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883465110&doi=10.1007%2fs11761-012-0125-z&partnerID=40&md5=e59dd0916877a1f470376c13f247a0c5,Universidade de São Paulo - Departamento de Ciência da Computação,"A service choreography is a distributed service composition in which services interact without a centralized control. Adequate adaptation strategies are required to face complex and ever-changing business processes, given the collaborative nature of choreographies. Choreographies should also be able to adapt to changes in its non-functional requirements, such as response time, and especially for large-scale choreographies, adaptation strategies need to be automated and scale well. However, the body of knowledge regarding choreography adaptation approaches has not yet been consolidated and systematically evaluated. By means of a systematic literature review, in which we examined seven scientific paper sources, we identified and analyzed the state-of-the-art in choreography adaptation. We found 24 relevant primary studies and grouped them into six categories: model-based, measurement-based, multi-agent-based, formal method-based, semantic reasoning-based, and proxy layer-based. We analyzed (i) how each strategy deals with different types of requirements, (ii) what their required degree of human intervention is, (iii) how the different studies considered scalability, (iv) what implementations are currently available, and (v) which choreography languages are employed. From the selected studies, we extracted key examples of choreography adaptation usage and analyzed the terminology they adopted with respect to dynamic adaptation. We found out that more attention has been devoted to functional requirements and automated adaptation; only one work performs scalability evaluation; and most studies present some sort of implementation and use a specific choreography notation. © 2012 Springer-Verlag London.",Choreographies adaptation; Choreographies customization; Service choreography; Service composition; Systematic review,Choreographies adaptation; Choreographies customization; Service choreographies; Service compositions; Systematic Review; Telecommunication networks; Quality of service
Fábio Kon,The attrsssaction of contributors in free and open source software projects,2013,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875273948&doi=10.1016%2fj.jsis.2012.07.004&partnerID=40&md5=66d038e580088dd12273b9c464e0a94d,Universidade de São Paulo - Departamento de Ciência da Computação,"As firms increasingly sanction an open sourcing strategy, the question of which open source project to undertake remains tentative. The lack of established metrics makes it difficult to formulate such strategy. While many projects have been formed and created, only a few managed to remain active. With the majority of these projects failing, firms need a reliable set of criteria to assess what makes a project appealing not only to developers but also to visitors, users and commercial sponsors. In this paper, we develop a theoretical model to explore the contextual and causal factors of project attractiveness in inducing activities such as source code contribution, software maintenance, and usage. We test our model with data derived from more than 4000 projects spanning 4 years. Our main findings include that projects' set of conditions such as license restrictiveness and their available resources provide the context that directly influence the amount of work activities observed in the projects. It was also found that indirect and unintended contributions such as recommending software, despite of being non-technical, cannot be ignored for project activeness, diffusion and sustainability. Finally, our analysis provide evidence that higher attractiveness leads to more code-related activities with the downside of slowing down responsiveness to address projects' tasks, such as the implementation of new features and bug fixes. Our model underscores the significance of the reinforcing effects of attractiveness and work activities in open source projects, giving us the opportunity to discuss strategies to manage common traps such as the liability of newness. We conclude by discussing the applicability of the research model to other user-led initiatives. © 2012 Elsevier B.V. All rights reserved.",Attractiveness; Contributions; Contributors; Free software; Open source; Preferential attachment; Software development,Attractiveness; Contributions; Contributors; Free software; Open sources; Preferential attachments; Industry; Open systems; Software engineering; Project management
Fábio Kon,Interpretative case studies on agile team productivity and management,2013,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869861862&doi=10.1016%2fj.infsof.2012.09.004&partnerID=40&md5=acc54bb888ec0bb95361cbfa8c684087,Universidade de São Paulo - Departamento de Ciência da Computação,"Context: The management of software development productivity is a key issue in software organizations, where the major drivers are lower cost and shorter time-to-market. Agile methods, including Extreme Programming and Scrum, have evolved as ""light"" approaches that simplify the software development process, potentially leading to increased team productivity. However, little empirical research has examined which factors do have an impact on productivity and in what way, when using agile methods. Objective: Our objective is to provide a better understanding of the factors and mediators that impact agile team productivity. Method: We have conducted a multiple-case study for 6 months in three large Brazilian companies that have been using agile methods for over 2 years. We have focused on the main productivity factors perceived by team members through interviews, documentation from retrospectives, and non-participant observation. Results: We developed a novel conceptual framework, using thematic analysis to understand the possible mechanisms behind such productivity factors. Agile team management was found to be the most influential factor in achieving agile team productivity. At the intra-team level, the main productivity factors were team design (structure and work allocation) and member turnover. At the inter-team level, the main productivity factors were how well teams could be effectively coordinated by proper interfaces and other dependencies and avoiding delays in providing promised software to dependent teams. Conclusion: Teams should be aware of the influence and magnitude of turnover, which has been shown negative for agile team productivity. Team design choices remain an important factor impacting team productivity, even more pronounced on agile teams that rely on teamwork and people factors. The intra-team coordination processes must be adjusted to enable productive work by considering priorities and pace between teams. Finally, the revised conceptual framework for agile team productivity supports further tests through confirmatory studies. © 2012 Elsevier B.V. All rights reserved.",Agile software development; Industrial case studies; Team management; Team productivity factors; Thematic analysis,Agile software development; Industrial case study; Productivity factors; Team management; Thematic analysis; Empowerment of personnel; Productivity; Research; Software design; Factor analysis
Fábio Kon,The path to openness: Letter from the editors,2012,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84888631957&doi=10.1007%2fs13174-012-0074-y&partnerID=40&md5=2118b663758af8fda5c0194322b75f74,Universidade de São Paulo - Departamento de Ciência da Computação,[No abstract available],,
Fábio Kon,Developers motivation in agile teams,2012,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869742300&doi=10.1109%2fSEAA.2012.45&partnerID=40&md5=b7364f68d868b97451aecb1680a888f9,Universidade de São Paulo - Departamento de Ciência da Computação,"A motivated individual is one of the cornerstones of agile software development. Although motivation has been recognized and studied in the software development field, little research has examined motivation in agile teams. Our study aims to provide a better understanding of what motivates software developers in agile environments. We conducted a systematic review of motivators in the agile context, classifying the results using the MOCC model of software engineers' motivation. Additionally, we performed three case studies in agile companies to both confirm our findings and gather new motivators. Our results suggest that motivation in the agile context is slightly different from the overall view of motivation in software development in general. © 2012 IEEE.",Agile software development; human factors; Motivation; Multiple-case study; Systematic literature review,Agile companies; Agile contexts; Agile environment; Agile software development; Agile teams; Multiple-case study; Software developer; Software engineers; Systematic literature review; Systematic Review; Human engineering; Software design; Motivation
Fábio Kon,A virtual stone soup: Letter from the editors,2012,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84866175777&doi=10.1007%2fs13174-012-0066-y&partnerID=40&md5=fd64d63fca250c2ceff57844ea9bbd44,Universidade de São Paulo - Departamento de Ciência da Computação,[No abstract available],,
Fábio Kon,An integrated development and runtime environment for the future internet,2012,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861019263&doi=10.1007%2f978-3-642-30241-1_8&partnerID=40&md5=5abdebd57548d5e9bb59d23557bcd95e,Universidade de São Paulo - Departamento de Ciência da Computação,"The Future Internet environments raise challenging issues for the Service-Oriented Architectures. Due to the scalability and heterogeneity issues new approaches are thought in order to leverage the SOA to support a wider range of services and users. The CHOReOS project is part of the European Community Initiative to sketch technological solutions for the future ultra large systems. In particular, CHOReOS explores the choreography of services paradigm. Within this project, a conceptual architecture combining both the development and runtime environments is realized. This chapter introduces the CHOReOS Integrated Development and Runtime Environment, aka IDRE. © 2012 Springer-Verlag Berlin Heidelberg.",Access; Choreography; Cloud & Grid; Discovery; Governance; IDRE; MDA; Middleware; Service; SOA; TDD; V&V,Access; Choreography; Discovery; Governance; IDRE; MDA; Service; SOA; TDD; Information services; Middleware; Service oriented architecture (SOA); Software architecture; Internet
Fábio Kon,Adaptive fault tolerance mechanisms for opportunistic environments: A mobile agent approach,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-80054923496&doi=10.1002%2fcpe.1706&partnerID=40&md5=a85bd97352fd5a139ba8d4d6cbc72cca,Universidade de São Paulo - Departamento de Ciência da Computação,"The mobile agent paradigm has emerged as a promising alternative to overcome the construction challenges of opportunistic grid environments. This model can be used to implement mechanisms that enable application execution progress even in the presence of failures such as the mechanisms provided by the MAG middleware (Mobile Agents for Grids). MAG includes retrying, replication, and checkpointing as fault tolerance techniques; they operate independently from each other and they are not capable of detecting changes on resource availability. In this paper, we describe a MAG extension that is capable of migrating agents when nodes fail, which optimizes application progress by keeping only the most advanced checkpoint, and also migrates slow replicas. The proposed approach was evaluated via simulations and experiments, which showed significant improvements. Copyright © 2011 John Wiley & Sons, Ltd. Copyright © 2011 John Wiley & Sons, Ltd.",adaptive fault tolerance; mobile agent; opportunistic grid,adaptive fault tolerance; Agent approach; Agent paradigm; Application execution; Check pointing; Fault tolerance mechanisms; Fault tolerance techniques; Grid environments; Implement mechanisms; Migrating agents; opportunistic grid; Resource availability; Fault tolerance; Middleware; Mobile agents
Fábio Kon,Future directions in the Internet-cloud computing and beyond,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857511356&doi=10.1007%2fs13174-011-0040-0&partnerID=40&md5=da7ccac06854343cccf7b0c74c72af84,Universidade de São Paulo - Departamento de Ciência da Computação,[No abstract available],,
Fábio Kon,Apache sustained competitive advantage in the web server industry,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898193758&doi=10.4018%2f978-1-61350-519-9.ch013&partnerID=40&md5=da37851bbffa12d03471e0c70b362f1d,Universidade de São Paulo - Departamento de Ciência da Computação,"Open source communities such as the ones responsible for Linux and Apache became well known for producing, with volunteer labor innovating over the Internet, high-quality software that has been widely adopted by organizations. In the web server market, Apache has dominated in terms of market share for over 15 years, outperforming corporations and research institutions. The resource-based view (RBV) of firms posits that an organization outperforms its competitors because it has valuable, rare, imperfectly imitable, and non-substitutable resources. Accordingly, one concludes that Apache possesses such resources to sustain its competitive advantage. However, one does not know what those resources are. This chapter is an effort to locate them, answering the question: ""What resources enable Apache to outperform its for-profit competitors consistently?"" This research draws on the RBV to develop a series of propositions about Apache's internal resources and organizational capabilities. For each proposition developed, methods for their empirical validation are proposed, and future research directions are provided. © 2012, IGI Global.",,
Fábio Kon,Ontology Merging: On the confluence between theoretical and pragmatic approaches,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891623349&partnerID=40&md5=c06e93efd58747d724c512dc578c9312,Universidade de São Paulo - Departamento de Ciência da Computação,"In recent years, researchers have focused on merging knowledge bases in both pragmatic and theoretical points of view. In this paper, we enumerate a few attempts to deal with inconsistencies while merging knowledge bases. We focus on ontology merging and show that pragmatic and theoretical approaches are not integrated and that both could benefit from a closer relationship. We extended an existing theoretical algorithm for Description Logics and applied it for the ontology merging problem. We describe here an implementation of this algorithm as an open source Protégé plugin.",,Description logic; Knowledge basis; Ontology merging; Open sources; Plug-ins; Theoretical algorithms; Theoretical approach; Theoretical points; Algorithms; Data description; Research; Semantic Web; Semantics; Merging
Fábio Kon,Free and open source software development and research: Opportunities for software engineering,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-82255180603&doi=10.1109%2fSBES.2011.19&partnerID=40&md5=57a45d90406545640d302b5e6254aa71,Universidade de São Paulo - Departamento de Ciência da Computação,"Free/Libre/Open Source Software (FLOSS) communities have produced a large amount of valuable software that is directly or indirectly used daily by any person with access to a computer. The field of Software Engineering studies processes, mechanisms, tools, and frameworks for the development of software artifacts. Historically, however, most of Software Engineering research and education does not benefit from the large and rich source of data and experimental testbeds offered by FLOSS projects and their hundreds of millions of lines of working code. In this paper, we discuss how Software Engineering research and education can greatly benefit from the wealth of information available in the FLOSS ecosystem. We then evaluate how FLOSS has been used, up to now, by papers published in the Brazilian Symposium on Software Engineering. Finally, we present an agenda for the future, proposing concrete ways to exploit the synergies between research and education in Software Engineering and FLOSS projects. © 2011 IEEE.",,Experimental testbed; FLOSS projects; Free and open source softwares; Software artifacts; Wealth of information; Engineering education; Engineering research; Software design; Open systems
Fábio Kon,Genesis and evolution of the agile movement in Brazil - Perspective from academia and industry,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-82255172034&doi=10.1109%2fSBES.2011.26&partnerID=40&md5=3ade1ed8b87d9375edf1a6953087ecdc,Universidade de São Paulo - Departamento de Ciência da Computação,"Agile software development methods have been increasingly adopted worldwide and became one of the mainstream software development approaches. Agile methods have also had an impact on software engineering education with universities adapting their courses to accommodate this new point of view of software development. Software engineering research has tried to evaluate the impact of agile methods in industrial projects and discover in which situations it is beneficial to apply such methods. However, there are still few studies focusing on the progress of the Agile Movement in Brazil.In this paper, we present an overview of the evolution of the Agile Movement in Brazil, outlining the history of its first advocates in academia and industry. We also describe existing educational initiatives and the impact of agile development on the national research and present a report on the agile state-of- the-practice in the Brazilian IT industry. © 2011 IEEE.",agile methods; agile movement in Brazil; Agile software development; Brazilian agile research and state-of-the-practice.; educational initiatives,Agile methods; Agile movement; Agile software development; Brazilian agile research and state-of-the-practice.; educational initiatives; Curricula; Industrial research; Industry; Software design
Fábio Kon,Asynchronous replication for evolutionary database development: A design for the experimental assessment of a novel approach,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-81255193980&doi=10.1007%2f978-3-642-25106-1_29&partnerID=40&md5=2f8a447eaea7aa7d6869f22a3b157adc,Universidade de São Paulo - Departamento de Ciência da Computação,"Environments with frequent changes in application requirements demand an evolutionary approach for database modeling. The challenge is greater when the database must support multiple applications simultaneously. An existing solution for database evolution is refactoring with a transition period. During this period, both the old and the new database schemas coexist and data is replicated in a synchronous process. This solution brings several difficulties, such as interference with the operation of applications. To minimize these difficulties, in this paper we present an asynchronous approach to keep these schemas updated. This paper presents the design for an experimental assessment of this novel approach for evolutionary database development. © 2011 Springer-Verlag.",agile methods; asynchronous data replication; database evolution; performance evaluation,Agile methods; Application requirements; Asynchronous data replication; Asynchronous replication; Database development; database evolution; Database modeling; Database schemas; Evolutionary approach; Experimental assessment; Multiple applications; Performance evaluation; Refactorings; Schemas; Synchronous process; Transition period; Internet; Database systems
Fábio Kon,Agile team perceptions of productivity factors,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-80053018190&doi=10.1109%2fAGILE.2011.35&partnerID=40&md5=0fe9fac839b7000163ee8a66825b5bf3,Universidade de São Paulo - Departamento de Ciência da Computação,In this paper we investigate agile team perceptions of factors impacting their productivity. Within this overall goal we also investigate which productivity concept was adopted by the agile teams studied. We here conducted two case studies in the industry and analyzed data from two projects that we followed for six months. From the perspective of agile team members the three most perceived factors impacting on their productivity were appropriate team composition and allocation external dependencies and staff turnover. Teams also mentioned pair programming and collocation as agile practices that impact productivity. As a secondary finding most team members did not share the same understanding of the concept of productivity. While some known factors still impact agile team productivity new factors emerged from the interviews as potential productivity factors impacting agile teams.© 2011 IEEE.,Agile methods; Empirical analysis; Productivity factors; Team productivity,Agile methods; Agile practices; Agile teams; Empirical analysis; Pair-programming; Potential productivity; Productivity factors; Team composition; Team members; Productivity
Fábio Kon,The Internet's deep impact-Letter from the Editors-in-Chief,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-79961186850&doi=10.1007%2fs13174-011-0022-2&partnerID=40&md5=e493144bd2e86b0f6eed6d9c244bbb93,Universidade de São Paulo - Departamento de Ciência da Computação,[No abstract available],,
Fábio Kon,Perspectives on cloud computing: Interviews with five leading scientists from the cloud community,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-79961197259&doi=10.1007%2fs13174-011-0023-1&partnerID=40&md5=2b31c599c0310e2da8aa8a5bc19109b6,Universidade de São Paulo - Departamento de Ciência da Computação,"Cloud computing is currently one of the major topics in distributed systems, with large numbers of papers being written on the topic, with major players in the industry releasing a range of software platforms offering novel Internet-based services and, most importantly, evidence of real impact on end user communities in terms of approaches to provisioning software services. Cloud computing though is at a formative stage, with a lot of hype surrounding the area, and this makes it difficult to see the true contribution and impact of the topic. Cloud computing is a central topic for the Journal of Internet Services and Applications (JISA) and indeed the most downloaded paper from the first year of JISA is concerned with the state-of-the-art and research challenges related to cloud computing. The Editors-in-Chief, Fabio Kon and Gordon Blair, therefore felt it was timely to seek clarification on the key issues around cloud computing and hence invited five leading scientists from industrial organizations central to cloud computing to answer a series of questions on the topic. © 2011 The Brazilian Computer Society.",,
Fábio Kon,Towards automated testing of web service choreographies,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-79959394987&doi=10.1145%2f1982595.1982621&partnerID=40&md5=cc7633a5d2a7ab8b37a43bc618c9cab8,Universidade de São Paulo - Departamento de Ciência da Computação,"Web service choreographies have been proposed as a decentralized scalable way of composing services in a SOA environment. In spite of all the benefits of choreographies, the decentralized flow of information, the parallelism, and multiple party communication restrict the automated testing of choreographies at design and runtime. The goal of our research is to adapt the automated testing techniques used by the Agile Software Development community to the SOA context. To achieve that, we seek to develop software tools and a methodology to enable test-driven development of Choreographies. In this paper, we present our first step in that direction, a software prototype composed of ad hoc automated test case scripts for testing a web service choreography. © 2011 Authors.",agile methods; choreography testing; web services,Agile methods; Agile software development; Automated test; Automated testing; choreography testing; Runtimes; Software prototypes; Test driven development; Web service choreography; Automation; Health care; Software design; Software prototyping; Software testing; Testing; User interfaces; Web services
Fábio Kon,Intellectual property policy and attractiveness: A longitudinal study of free and open source software projects,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-79955159128&doi=10.1145%2f1958824.1958950&partnerID=40&md5=5eea3b93146286d62f0b6e0fb057885c,Universidade de São Paulo - Departamento de Ciência da Computação,This paper reports early findings of a longitudinal study designed to evaluate the impact of changes in the intellectual property policy of 756 free and open source projects on their attractiveness over 44 months. Copyright 2011 ACM.,Attractiveness; Free software; Governance; GPL; Intellectual property; Licenses; Open source software,Attractiveness; Free software; Governance; GPL; Licenses; Open source software; Copyrights; Groupware; Interactive computer systems; International law; Open systems
Fábio Kon,One year of JISA-letter from the editors-in-chief,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-79952048015&doi=10.1007%2fs13174-010-0018-3&partnerID=40&md5=ee71fb26dd9c5ee2bb0ac58c14174c45,Universidade de São Paulo - Departamento de Ciência da Computação,[No abstract available],,
Fábio Kon,Extending patterns for fearless change,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899796282&doi=10.1145%2f2578903.2579156&partnerID=40&md5=d9f299ccfd70db4da9bacd46b8bb5960,Universidade de São Paulo - Departamento de Ciência da Computação,"The software industry is very dynamic and new ideas arise all the time from virtually any part of the world. It is not guaranteed that these ideas will be adopted, mainly because, among other obstacles, the solution may imply on having people change their way of thinking. Different from people, computers receive well defined commands and execute them precisely. We should take into account that human beings are independent and unpredictable. Despite this unpredictability, we can find some behavioral patterns to help us deal with several situations, allowing us to achieve our objectives. In this paper, after a small introduction to the Patterns for Introducing New Ideas proposed by Mary Lynn Manns and Linda Rising, we propose four new patterns that can be added to the original catalog. In one of these new patterns, we show the great importance of combining artistic activities with day-to-day activities of people who work with software development and how Arts can help us to introduce new ideas. The study of some practices such as theater, painting, poetry, music, and meditation allowed us to find some connective elements between the purely mathematical side of the human mind and its creative, artistic one. Software development should be approached as a ""human activity"", rather than a solely technical or logical one. © Copyright 2011 Carnegie Mellon University.",Agile; Art; Behavioral patterns; Do art; Fearless change; Let them play; Linda Rising; Mary Lynn Manns; Patterns for introducing new ideas,Computer applications; Computer programming; Agile; Art; Behavioral patterns; Do art; Fearless change; Let them play; Linda Rising; Mary Lynn Manns; Patterns for introducing new ideas; Software design
Fábio Kon,Empirical evaluation of agile practices impact on team productivity,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-79956312509&doi=10.1007%2f978-3-642-20677-1_26&partnerID=40&md5=bcfd7f33aee96a3e024ac514fd65baab,Universidade de São Paulo - Departamento de Ciência da Computação,"Agile methods have become more popular since the early 2000s and, in some cases, can offer better results for software development projects when compared to traditional approaches. Agile methods promise to achieve high productivity and to deliver high-quality software, attracting the attention of companies, which demand ever-higher development speed and quality in their products. © 2011 Springer-Verlag Berlin Heidelberg.",agile methods; empirical evaluation; team productivity,Productivity; Software design; Agile methods; Agile practices; empirical evaluation; Empirical evaluations; High productivity; High-quality software; Software development projects; team productivity; Computer software selection and evaluation
Fábio Kon,Preface,2011,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983189002&doi=10.1007%2f978-3-642-25821-3&partnerID=40&md5=94e2770bebf615c0cdfcba9af8442376,Universidade de São Paulo - Departamento de Ciência da Computação,[No abstract available],,
Fábio Kon,A network of FLOSS competence centres,2010,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872045883&doi=10.1007%2f978-3-642-13244-5_30&partnerID=40&md5=e438a49da1249373e228ba43c7c78129,Universidade de São Paulo - Departamento de Ciência da Computação,"The goal of a Network of Competence Centers is to provide to FLOSS users, developers, and consumers, high-quality resources and expertise on the various topics related to FLOSS. This may be achieved via education, training, consulting, hosting, and certification not only in terms of tools and platforms but also methodologies, studies, and best practices. Based on the experience of QualiPSo Competence Centres, we observe how such a Network is working as a mechanism for sharing success stories, failures, questions, recommendations, best practices, and any kind of information that could help the establishment of a solid international collaborative environment for supporting quality in FLOSS. New Competence Centres are invited to the QualiPSo Network after their proposals are evaluated by the QualiPSo Competence Centres Board to ensure that the prospective Competence Centre is compliant with the QualiPSo Network Agreement, sharing a common vision and ethics. Each Competence Centre acts in its geographical region to increase the awareness of FLOSS and to better prepare the IT workforce for developing and using FLOSS based solutions. As of 2009, the process for Competence Centre creation is sustainable and reusable; guidelines for establishing proposals and opening new Competence Centres have been created, and promotion of Qualipso Competence Centres is done world wide from India to USA thanks to key initiatives such as the Open World Forum and the FLOSS Competence Centre Summit. This lecture will expose how these Competence Centres relate to each other, which governance model is used and, based on existing experiences, will describe how they currently operate in Europe and Brazil and what is planned in Italy, Belgium, Japan, and China for 2010. © 2010 IFIP International Federation for Information Processing.",,Belgium; Collaborative environments; High quality; IT Workforce; Open world; Information technology; Open systems
Fábio Kon,Attractiveness of free and open source projects,2010,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870632408&partnerID=40&md5=dd9a0ad1379c0248f219bd0c3062f1bb,Universidade de São Paulo - Departamento de Ciência da Computação,"Organisations and individuals release source code on the Web to improve their software by attracting peers in the strategic move of "" opensourcing"" that has created thousands of open source projects (e.g., Eclipse-IBM, Thunderbird-Mozilla and Linux-Torvalds). Nevertheless, most of these projects fail to attract people and never become active. To minimize this problem, we developed a theoretical model around a crucial construct (attractiveness) to open source projects, proposing its causes (project characteristics), indicators (e.g., number of members) and consequences (levels of activeness, efficiency, likelihood of task completion, time for task completion and software quality). We tested this model empirically using 3 samples of over 4600 projects each in a multi-sample SEM analysis. The results confirm the central role that attractiveness plays to guarantee an active and efficient community of software development, shedding new light on whether more developers increase software quality by finding and fixing more bugs and providing upgrades. They also clarify the actual causal structure involving Web page visits, downloads and members, which can be easily mistaken. Moreover, the results can provide useful insights to strategists as we discuss the impacts of license restrictiveness, software development status, type of project and intended audience on attractiveness and its consequences.",Attractiveness; Free and open source software; Software engineering; Software quality,Attractiveness; Free and open source softwares; Open source projects; Project characteristics; Projects fail; SEM analysis; Software Quality; Source codes; Theoretical models; Computer operating systems; Computer software selection and evaluation; Information systems; Software design; Software engineering; World Wide Web; Open systems
Fábio Kon,CHOReOS: Scaling choreographies for the internet of the future,2010,https://www.scopus.com/inward/record.uri?eid=2-s2.0-79957971408&doi=10.1145%2f1930028.1930036&partnerID=40&md5=3877ced62ddde9d569f08b29326d7e6e,Universidade de São Paulo - Departamento de Ciência da Computação,"The Internet has been growing at a impressive rate in many aspects such as size, heterogeneity, and usage. This growth forces the continuous improvement of Internet infrastructure technologies. The Future Internet concept magnifies the required shift for Internet technologies, which shall allow supporting the continuously growing scale of the converging networking world together with new generations of services made available to and brought by the broad mass of end users. The CHOReOS project positions itself in this vision of the Future Internet, whilst focusing on the Future Internet of Services. This research project aims at assisting the engineering of software service compositions in this novel networking environment by devising a dynamic development process, and associated methods, tools and middleware, to sustain the composition of services in the form of large-scale choreographies for the Internet of the future. © 2010 ACM.",Choreography; Internet of the future; Web services,Choreography; Composition of services; Continuous improvements; Dynamic development; End users; Future internet; Internet infrastructure; Internet of the future; Internet of the futures; Internet technology; Networking environment; Software services; Internet; Middleware; Telecommunication networks; User interfaces; Web services
Fábio Kon,A study of the relationships between source code metrics and attractiveness in free software projects,2010,https://www.scopus.com/inward/record.uri?eid=2-s2.0-79952060270&doi=10.1109%2fSBES.2010.27&partnerID=40&md5=4244524b73db5f9d2db69e3d37286d5f,Universidade de São Paulo - Departamento de Ciência da Computação,"A significant number of Free Software projects has been widely used and considered successful. However, there is an even larger number of them that cannot overcome the initial steps towards building an active community of users and developers. In this study, we investigated whether there are relationships between source code metrics and attractiveness, i.e., the ability of a project to attract users and developers. To verify these relationships, we analyzed 6,773 Free Software projects from the SourceForge.net repository. The results indicated that attractiveness is indeed correlated to some source code metrics. This suggests that measurable attributes of the project source code somehow affect the decision to contribute to and adopt a Free Software. The findings described in this paper show that it is relevant for project leaders to monitor source code quality, particularly a few objective metrics, since these can have a positive influence in projects chances of forming a community of contributors and users around their software, enabling further enhancement in quality. © 2010 IEEE.",,Free software; Objective metrics; Project leaders; Source codes; Software engineering
Fábio Kon,The software in the middle-Letter from the editors-in-chief,2010,https://www.scopus.com/inward/record.uri?eid=2-s2.0-79952486453&doi=10.1007%2fs13174-010-0013-8&partnerID=40&md5=abdc5b1e8acaad5ca441177182db2d50,Universidade de São Paulo - Departamento de Ciência da Computação,[No abstract available],,
Fábio Kon,Reliable management of checkpointing and application data in opportunistic grids,2010,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870393036&doi=10.1007%2fs13173-010-0016-0&partnerID=40&md5=9a192cca41b107c62c58469391dbdcaf,Universidade de São Paulo - Departamento de Ciência da Computação,"Opportunistic computational grids use idle processor cycles from shared machines to enable the execution of long-running parallel applications. Besides computational power, these applications may also consume and generate large amounts of data, requiring an efficient data storage and management infrastructure. In this article, we present an integrated middleware infrastructure that enables the use of not only idle processor cycles, but also unused disk space of shared machines. Our middleware enables the reliable distributed storage of application data in the shared machines in a redundant and fault-tolerant way. A checkpointing-based mechanism monitors the execution of parallel applications, saves periodical checkpoints in the shared machines, and in case of node failures, supports the application migration across heterogeneous grid nodes. We evaluate the feasibility of our middleware using experiments and simulations. Our evaluation shows that the proposed middleware promotes important improvements in grid data management reliability while imposing a low performance overhead. © 2010 The Brazilian Computer Society.",Distributed data storage; Grid computing; Grid middleware; Opportunistic grid,Application migrations; Distributed data storages; GRID middleware; Integrated middlewares; Large amounts of data; Management infrastructure; Opportunistic grid; Parallel application; Digital storage; Information management; Middleware; Grid computing
Fábio Kon,Bootstrapping JISA-Letter from the editors-in-chief,2010,https://www.scopus.com/inward/record.uri?eid=2-s2.0-77950115679&doi=10.1007%2fs13174-010-0008-5&partnerID=40&md5=33972ab261e72f5cf14bc6db5832601f,Universidade de São Paulo - Departamento de Ciência da Computação,[No abstract available],,
Fábio Kon,Application execution management on the InteGrade opportunistic grid middleware,2010,https://www.scopus.com/inward/record.uri?eid=2-s2.0-77949912724&doi=10.1016%2fj.jpdc.2010.01.010&partnerID=40&md5=d4f7dd07f80c52afdfcd4130eb7fe38d,Universidade de São Paulo - Departamento de Ciência da Computação,"The InteGrade project is a multi-university effort to build a novel grid computing middleware based on the opportunistic use of resources belonging to user workstations. The InteGrade middleware currently enables the execution of sequential, bag-of-tasks, and parallel applications that follow the BSP or the MPI programming models. This article presents the lessons learned over the last five years of the InteGrade development and describes the solutions achieved concerning the support for robust application execution. The contributions cover the related fields of application scheduling, execution management, and fault tolerance. We present our solutions, describing their implementation principles and evaluation through the analysis of several experimental results. © 2010 Elsevier Inc. All rights reserved.",Fault tolerance; Grid computing; Opportunistic grid; Resource management,Application execution; Application scheduling; Execution management; Grid computing middleware; GRID middleware; Grid resource management; Lessons learned; Opportunistic grid; Parallel application; Programming models; Robust application; Fault tolerance; Middleware; Natural resources management; Parallel programming; Quality assurance; Resource allocation; Scheduling; Grid computing
Fábio Kon,Towards an adaptive middleware for opportunistic environment: A mobile agent approach,2009,https://www.scopus.com/inward/record.uri?eid=2-s2.0-77249150668&doi=10.1145%2f1657120.1657126&partnerID=40&md5=e9fa9952341ceae30898e04bbe7853aa,Universidade de São Paulo - Departamento de Ciência da Computação,"The mobile agent paradigm has emerged as a promising alternative to overcome the construction challenges of opportunistic grid environments. This model can be used to implement mechanisms that enable application execution progress even in the presence of failures, such as those presented by the MAG middleware (Mobile Agents for Grids). MAG includes retrying, replication, and checkpointing as fault-tolerance techniques; they operate independently from each other and are not capable of detecting changes on resource availability. In this paper, we describe a MAG extension that is capable of migrating agents when nodes fail, that optimizes application progress by keeping only the most advanced checkpoint, and that migrates slow replicas.",,Adaptive middleware; Application execution; Check pointing; Grid environments; Implement mechanisms; Migrating agents; Resource availability; Clouds; Fault tolerance; Gas welding; Middleware; Quality assurance; Mobile agents
Fábio Kon,Efficient maintenance of distributed data in highly dynamic opportunistic grids,2009,https://www.scopus.com/inward/record.uri?eid=2-s2.0-72949092447&doi=10.1145%2f1529282.1529515&partnerID=40&md5=cd48ccad56c4354acff35dade5668bca,Universidade de São Paulo - Departamento de Ciência da Computação,"Opportunistic grids are a class of computational grids that can leverage the idle processing and storage capacity of shared workstations in laboratories, companies, and universities to perform useful computation. OppStore is a middleware that allows using the free disk space of machines from an opportunistic grid for the distributed storage of application data. But when machines depart from the grid, it is necessary to reconstruct the fragments that were stored in that machines. Depending on the amount of stored data and the rate of machine departures, the generated traffic may make the distributed storage of data infeasible. In this work we present and evaluate a fragment recovery mechanism that makes viable to achieve redundancy and large data scale in a dynamic environment. Copyright 2009 ACM.",Data redundancy; Distributed storage; Grid computing,Application data; Computational grids; Data redundancy; Distributed data; Distributed storage; Dynamic environments; Free disk; Large data; Recovery mechanisms; Storage capacity; Computer science; Middleware; Quality assurance; Redundancy; Grid computing
Fábio Kon,Batching: A design pattern for efficient and flexible client/server interaction,2009,https://www.scopus.com/inward/record.uri?eid=2-s2.0-76749104708&doi=10.1007%2f978-3-642-10832-7_2&partnerID=40&md5=506d6827ad677309f4b5ffeea49e7c90,Universidade de São Paulo - Departamento de Ciência da Computação,"The Batching design pattern consists of a common piece of design and implementation that is shared by a wide variety of well-known techniques in Computing such as gather/scatter for input/output, code downloading for system extension, message batching, mobile agents, and deferred calls for disconnected operation. All techniques mentioned above are designed for applications running across multiple domains (e.g., multiple processes or multiple nodes in a network). In these techniques, multiple operations are bundled together and then sent to a different domain, where they are executed. In some cases, the objective is to reduce the number of domain-crossings. In other cases, it is to enable dynamic server extension. In this article, we present the Batching pattern, discuss the circumstances in which the pattern should and should not be used, and identify eight classes of existing techniques that instantiate it. © 2009 Springer-Verlag Berlin Heidelberg.",,Client/server; Design Patterns; Different domains; Disconnected operations; Input/output; Multiple domains; Multiple nodes; Multiple operations; Multiple process; System extension; Wireless networks; Mobile agents
Fábio Kon,Applying semantics to grid middleware,2009,https://www.scopus.com/inward/record.uri?eid=2-s2.0-68949163547&doi=10.1002%2fcpe.1395&partnerID=40&md5=95bd553bfab4a2255ff0839f848f57e6,Universidade de São Paulo - Departamento de Ciência da Computação,"Scheduling parallel and distributed applications efficiently onto grid environments is a difficult task and a great variety of scheduling heuristics has been developed aiming to address this issue. A successful grid resource allocation depends, among other things, on the quality of the available information about software artifacts and grid resources. In this article, we propose a semantic approach to integrate selection of equivalent resources and selection of equivalent software artifacts to improve the scheduling of resources suitable for a given set of application execution requirements. We also describe a prototype implementation of our approach based on the Integrade grid middleware and experimental results that illustrate its benefits. Copyright ©2009 John Wiley & Sons, Ltd.",Grid computing; Ontologies; OWL; Semantic grids,Application execution; Grid environments; GRID middleware; Grid resource; Grid resource allocation; OWL; Parallel and distributed applications; Prototype implementations; Scheduling heuristics; Semantic approach; Semantic grids; Software artifacts; Computer system firewalls; Middleware; Ontology; Planning; Resource allocation; Scheduling; Semantics; Software prototyping; Grid computing
Fábio Kon,A group membership service for large-scale grids,2008,https://www.scopus.com/inward/record.uri?eid=2-s2.0-77953093164&doi=10.1145%2f1462704.1462707&partnerID=40&md5=5df8f336676847cee8cc161fede0a6b1,Universidade de São Paulo - Departamento de Ciência da Computação,"In this paper, we propose a decentralized group membership service that can be incorporated into existing grid middleware to make it more reliable. This service includes a flexible failure detector that adapts dynamically to changing network conditions and can be configured with a number of failure recovery strategies. Moreover, it disseminates information about membership changes (new processes, failures, etc.) in a scalable and efficient manner. We conducted a preliminary evaluation of the proposed service by simulating a grid with up to 140 nodes distributed across three domains separated by a wide-area network. This evaluation showed that the proposed service performs well both in the absence and in the presence of process failures. Copyright 2008 ACM.",Failure detection; Grid computing; Group membership,Failure detection; Failure Detectors; Failure recovery; GRID middleware; Group membership service; Group memberships; Network condition; New process; Process failure; Detectors; Middleware; Grid computing
Fábio Kon,Borboleta: A mobile telehealth system for primary homecare,2008,https://www.scopus.com/inward/record.uri?eid=2-s2.0-56749107696&doi=10.1145%2f1363686.1363998&partnerID=40&md5=fcbc11c4bc6f6407e5dcf6f76c714504,Universidade de São Paulo - Departamento de Ciência da Computação,"Public homecare programs such as the Brazilian Family Health program, initiated in the late 1990s, have proven to be a very effective tool for Preventive Medicine. The goal of these programs is to bring physicians, nurses, and social workers to the homes of the lower income population in lesser-attended regions within multi-million people metropolis. However, there is practically no IT support for the operation of these programs, leading to inefficiencies. For example, in a particular Primary Homecare Program our group is involved with, nurses visit the homes of their patients carrying a pencil and a piece of paper and, during their visits, found themselves isolated from the Primary Healthcare Center, the University Hospital, and the physicians who could provide them with important information to improve the quality of the services they provide. Each visit associated with the program results in a three-page report, which is handwritten and stored in cabinets, with no possibility for information summarization, statistical analysis, or data mining. In this paper, we describe the architectural design, the prototype implementation, and our preliminary experiences with the Borboleta system, whose goal is to use Mobile Computing technologies to promote digital inclusion as well as to improve the quality of Preventive Healthcare services offered by the public sector. We focus primarily in developing software that runs on PDAs used by health professionals while providing home healthcare. Currently, nurses of the Primary Healthcare Center are testing the system and starting to use it on medical visits. Copyright 2008 ACM.",Homecare; Mo-; Preventive medicine; Telehealth; Telemedicine,Developing softwares; Digital inclusions; Effective tools; Health professionals; Healthcare services; Home health cares; Homecare; Information summarizations; Mo-; Mobile Computing technologies; Preventive medicine; Prototype implementations; Public sectors; Statistical analysis; Telehealth; Telehealth systems; Architectural design; Information management; Molybdenum; Nursing; Software prototyping; Telemedicine; Wireless telecommunication systems; Medical computing
Fábio Kon,"AcMus: An open, integrated platform for room acoustics research",2008,https://www.scopus.com/inward/record.uri?eid=2-s2.0-55749090379&partnerID=40&md5=c9cfbfe83784ade31f4eb642d54b2aef,Universidade de São Paulo - Departamento de Ciência da Computação,"This article describes the design, implementation, and experiences with AcMus, an open and integrated software platform for room acoustics research, which comprises tools for measurement, analysis, and simulation of rooms for music listening and production. Through use of affordable hardware, such as laptops, consumer audio interfaces and microphones, the software allows evaluation of relevant acoustical parameters with stable and consistent results, thus providing valuable information in the diagnosis of acoustical problems, as well as the possibility of simulating modifications in the room through analytical models. The system is open-source and based on a flexible and extensible Java plug-in framework, allowing for cross-platform portability, accessibility and experimentation, thus fostering collaboration of users, developers and researchers in the field of room acoustics.",Acoustical parameters; Computer simulation; Impulse response measurement; Musical evaluation; Optimization; Room acoustics,Acoustical parameters; Acoustical problems; Audio interfaces; Impulse response measurements; Integrated platform; Integrated software; Musical evaluation; Room acoustics; Acoustics; Architectural acoustics; Computer simulation; Impulse response; Measurements; Optimization; Research; Parameter estimation
Fábio Kon,An eclipse-based tool for symbolic debugging of distributed object systems,2007,https://www.scopus.com/inward/record.uri?eid=2-s2.0-38349060116&partnerID=40&md5=2cbca0931a0c2eaf5d20d62be4dc387f,Universidade de São Paulo - Departamento de Ciência da Computação,"After over thirty years of distributed computing, debugging distributed applications is still regarded as a difficult task. While it could be argued that this condition stems from the complexity of distributed executions, the fast pace of evolution witnessed with distributed computing technologies has also played its role by shortening the life-span of many useful debugging tools. In this paper we present an extensible Eclipse-based tool which brings distributed threads and symbolic debuggers together, resulting in a simple and useful debugging aid. This extensible tool is based on a technique that is supported by elements that are common to synchronous-call middleware implementations, making it a suitable candidate for surviving technology evolution. © Springer-Verlag Berlin Heidelberg 2007.",,Computational complexity; Middleware; Program debugging; Distributed object systems; Symbolic debugging; Technology evolution; Object oriented programming
Fábio Kon,Tracking the evolution of object-oriented quality metrics on agile projects,2007,https://www.scopus.com/inward/record.uri?eid=2-s2.0-38149020059&partnerID=40&md5=4211c1671a2edd080b61db7f56cf837f,Universidade de São Paulo - Departamento de Ciência da Computação,"The automated collection of source code metrics can help agile teams to understand the software they are producing, allowing them to adapt their daily practices towards an environment of continuous improvement. This paper describes the evolution of some object-oriented metrics in several agile projects we conducted recently in both academic and governmental environments. We analyze seven different projects, some where agile methods were used since the beginning and others where some agile practices were introduced later. We analyze and compare the evolution of such metrics in these projects and evaluate how the different project context factors have impacted the source code. © Springer-Verlag Berlin Heidelberg 2007.",Agile methods; Extreme programming; Object-oriented metrics; Tracking,Project management; Software engineering; Tracking (position); Agile methods; Extreme programming; Object-oriented metrics; Source code metrics; Object oriented programming
Fábio Kon,Semantics-based grid resource management,2007,https://www.scopus.com/inward/record.uri?eid=2-s2.0-57349187621&doi=10.1145%2f1376849.1376856&partnerID=40&md5=ad54fbffb020d47780a3369a48cf970d,Universidade de São Paulo - Departamento de Ciência da Computação,"Scheduling parallel and distributed applications efficiently onto grid environments is a difficult task and a great variety of scheduling heuristics have been developed aiming to address this issue. A successful grid resource allocation depends, among other things, on the quafhy of the available information about software artifacts and grid resources. In this paper, we propose a semantic approach to integrate selection of equivalent resources and selection of equivalent software artifacts in order to improve the schedule of resources suitable for a given set of application execution requirements. We also describe a prototype implementation of our approach based on the Integrade grid middleware and experimental results that indicate its benefits. Copyright 2007 ACM.","[Systems and software, Information storage and retrieval]; H.3.4 [Distributed systems]","Computer software; Computer software selection and evaluation; Computer system firewalls; Data storage equipment; Information management; Information theory; Management; Middleware; Planning; Resource allocation; Scheduling; Semantics; Technical presentations; [Systems and software, Information storage and retrieval]; Application executions; GRID environments; GRID middlewares; Grid resource allocations; Grid resource managements; Grid resources; H.3.4 [Distributed systems]; Parallel and distributed applications; Prototype implementations; Scheduling heuristics; Semantic approaches; Software artifacts; Grid computing"
Fábio Kon,Design and implementation of a middleware for data storage in opportunistic grids,2007,https://www.scopus.com/inward/record.uri?eid=2-s2.0-34548357177&doi=10.1109%2fCCGRID.2007.37&partnerID=40&md5=8b5b8787670b6780164244a52b4bcbc1,Universidade de São Paulo - Departamento de Ciência da Computação,"Shared machines in opportunistic grids typically have large quantities of unused disk space. These resources could be used to store application and checkpointing data when the machines are idle, allowing those machines to share not only computational cycles, but also disk space. In this paper, we present the design and implementation of OppStore, a middleware that provides reliable distributed data storage using the free disk space from shared grid machines. The system utilizes a two-level peer-to-peer organization to connect grid machines in a scalable and faulttolerant way. Finally, we use the concept of virtual ids to deal with resource heterogeneity, enabling heterogeneityaware load-balancing selection of storage sites. © 2007 IEEE.",,Data storage equipment; Distributed database systems; Grid computing; Magnetic disk storage; Reliability theory; Computational cycles; Distributed data storage; Middleware
Fábio Kon,Message from the CCGrid workshops chairs,2007,https://www.scopus.com/inward/record.uri?eid=2-s2.0-34548364078&doi=10.1109%2fCCGRID.2007.72&partnerID=40&md5=ffc54a0a8f6517afa50fcf13a423841e,Universidade de São Paulo - Departamento de Ciência da Computação,[No abstract available],,
Fábio Kon,Is IEEE 802.11 ready for VoIP?,2007,https://www.scopus.com/inward/record.uri?eid=2-s2.0-34250738862&doi=10.1109%2fMMSP.2006.285278&partnerID=40&md5=28b958a78412c0ad13db459260bcee05,Universidade de São Paulo - Departamento de Ciência da Computação,"In this paper, we empirically explore voice communication over IEEE 802.11 networks (VoWiFi). The objective is to understand the limitations of the current WiFi network for VoWiFi deployment. Our experiment finds two major problems of VoWiFi: unstable and excessively long handoffs and unpredictable occurrence of bursts. We also discuss several other minor factors that could hinder VoWiFi deployment, such as network capacity, fairness, and interference susceptibility. Finally, we describe the scenarios where VoWiFi could be used. We conclude that VoWiFi is feasible if used moderately, with low mobility and good signal strength. © 2006 IEEE.",,Interference susceptibility; Network capacity; Signal strength; VoWiFi deployment; Problem solving; Signal analysis; Signal interference; Speech communication; Wi-Fi; Wireless networks
Fábio Kon,Distributed data storage for opportunistic grids,2006,https://www.scopus.com/inward/record.uri?eid=2-s2.0-34547194778&doi=10.1145%2f1169100.1169103&partnerID=40&md5=8134a5bd354464bb886abdf7093af18a,Universidade de São Paulo - Departamento de Ciência da Computação,"Grid applications typically need to deal with large amounts of data. The traditional approach for data storage is to employ high-performance dedicated servers with data replication. However, a class of computational grids, called opportunistic grids, focus on the usage of idle resources from shared machines. These machines normally have large quantities of unused storage space that could be used when the machines are idle, allowing opportunistic grids to share not only computational cycles, but also storage space.In this work, we present the initial design of OppStore, a middleware that provides reliable storage using the free storage space from shared grid machines. The storage can be transparently accessed from any grid machine, allowing easy data sharing among grid users and applications. The system uses a two-level peer-to-peer organization to connect grid machines in a scalable and fault-tolerant way. To deal with resource heterogeneity, we developed the concept of virtual ids, which allows the creation of virtual spaces located on top of the peer-to-peer routing substrate. These virtual spaces enables the middleware to perform heterogeneity-aware, load-balancing selection of storage sites using multiple simultaneous metrics. Copyright 2006 ACM.",,Data storage equipment; Middleware; Software architecture; Virtual storage; Distributed data storage; Grid applications; Shared machines; Virtual spaces; Distributed computer systems
Fábio Kon,Defining and exploring a grid system ontology,2006,https://www.scopus.com/inward/record.uri?eid=2-s2.0-34547700717&doi=10.1145%2f1186675.1186693&partnerID=40&md5=daf2c9c0a54c830af903f4b9607899ce,Universidade de São Paulo - Departamento de Ciência da Computação,This work introduces a generic and extensible grid system ontology and presents an approach to explore it in different grid scenarios. © 2006 ACM.,,Middleware; Ontology; Grid system ontology; Grid computing
Fábio Kon,Trust in large-scale computational grids: An SPKI/SDSI extension for representing opinion,2006,https://www.scopus.com/inward/record.uri?eid=2-s2.0-34547662275&doi=10.1145%2f1186675.1186683&partnerID=40&md5=61718afe84fb11ee5553336f4400f590,Universidade de São Paulo - Departamento de Ciência da Computação,"SPKI/SDSI is a flexible and extensible decentralized security model that provides authentication, confidentiality, and access control. However, SPKI/SDSI certification chains are not suitable for large scale, highly dynamic environments such as computational grids. This work extends the SPKI/SDSI model by including an opinion model based on subjective logic. A simulation is performed to evaluate the effectiveness of the proposal. © 2006 ACM.",,Access control; Authentication; Computer simulation; Dynamic models; Certification chains; Computational grids; Grid computing
Fábio Kon,Strategies for checkpoint storage on opportunistic grids,2006,https://www.scopus.com/inward/record.uri?eid=2-s2.0-33750015693&partnerID=40&md5=fde5c14c34ced170fe0125ec6be85741,Universidade de São Paulo - Departamento de Ciência da Computação,"Strategies for storing checkpoint data in an opportunistic grid environment, including replication, parity information, and erasure coding, are analyzed. Checkpoint-based rollback is a fault tolerance mechanisms, which ensures that applications execute properly amid frequent failures. Erasure coding such as information dispersal algorithms, and the addition of parity information is used to split data into redundant fragments to enable data recovery from a subset of the fragments. A distributed checkpoints repository over InteGrade is implemented to leverage the computing power of idle shared workstations. InteGrade is a grid middleware solution for harnessing idle computing power from shared workstations. It consists of a collection of hierarchically organized InteGrade clusters. The use of data replication to store full replicas of generated checkpoints minimize extra coding when one of the replicas becomes inaccessible.",,Data replication; Distributed checkpoints repository; Information dispersal algorithms; InteGrade; Algorithms; Computer workstations; Encoding (symbols); Fault tolerant computer systems; Information dissemination; Data storage equipment
Fábio Kon,Scheduling moldable BSP tasks,2006,https://www.scopus.com/inward/record.uri?eid=2-s2.0-33744928869&partnerID=40&md5=a8b4ef6ed01e003365d2976373dd373e,Universidade de São Paulo - Departamento de Ciência da Computação,"Our main goal in this paper is to study the scheduling of parallel BSP tasks on clusters of computers. We focus our attention on special characteristics of BSP tasks, which can use fewer processors than the original required, but with a particular cost model. We discuss the problem of scheduling a batch of BSP tasks on a fixed number of computers. The objective is to minimize the completion time of the last task (makespan). We show that the problem is difficult and present approximation algorithms and heuristics. We finish the paper presenting the results of extensive simulations under different workloads. © Springer-Verlag Berlin Heidelberg 2005.",,Algorithms; Approximation theory; Computer simulation; Problem solving; Program processors; Scheduling; Approximation algorithms; Heuristics; Workloads; Parallel processing systems
Fábio Kon,Checkpointing BSP parallel applications on the InteGrade Grid middleware,2006,https://www.scopus.com/inward/record.uri?eid=2-s2.0-33646182907&doi=10.1002%2fcpe.966&partnerID=40&md5=0885a551f265cf1c078bdbffa5dee5b8,Universidade de São Paulo - Departamento de Ciência da Computação,"InteGrade is a Grid middleware infrastructure that enables the use of idle coputing power from user workstations. One of its goals is to support the execution of long-running parallel applications that present a considerable amount of communication among application nodes. However in an environment composed of shared user workstation spread across many different LANs machines may fail become inaccissible, or may switch from idle to busy very rapidly, compromising the execution of the parallel application in some of its nodes. Thus, to provide some mechanism for fault tolerance becomes a major requirment for such a system. In this paper, we describe the support for checkpoint-based rollback recovery of Bulk Synchronous Parallel application running over the InteGrade middleware. This mechanism consists of periodically saving application state to permit the application to restart its execution from an intermediate execution point in case of failure. A precompiler automatically instruments the source code of a C/C++ application, adding code fro saving and recovering application state. A failure detector monitors the application executin. In case of failure, the application is restarted from the last saved global checkpoint. Copyright © 2005 John Wilev & Sons, Ltd.",BSP; Checkpointing; Fault tolerance; Grid computing,Computer workstations; Fault tolerant computer systems; Local area networks; Object oriented programming; Parallel algorithms; BSP; Bulk Synchronous Parallel application; Checkpointing; Grid computing; InteGrade middleware; Middleware
Fábio Kon,Experiences tracking agile projects: an empirical study,2006,https://www.scopus.com/inward/record.uri?eid=2-s2.0-80053023278&doi=10.1007%2fBF03194495&partnerID=40&md5=6d7991b023c7b8cf519db26b5764fefa,Universidade de São Paulo - Departamento de Ciência da Computação,"In this article, we gather results from several projects we conducted recently that use some kind of agile method. We analyze both academic and governmental software development projects, some of them using agile methods since the beginning and others in which agile methods were introduced afterwards. Our main goals are to classify the different projects, and to analyze the collected data and discover which metrics are best suited to support tracking an agile project. We use both quantitative and qualitative methods, obtaining data from the source code, from the code repository, and from the feedback received from surveys and interviews held with the team members. We use various kinds of metrics such as lines of code, number of tests, cyclomatic complexity, number of commits, as well as combinations of these. In this article, we describe in detail the projects, the metrics, the obtained results, and their analysis from our main goals standpoint, providing guidelines for the use of metrics to track an agile software development project. © 2007, The Brazilian Computer Society.",Agile Methods; Extreme Programming; Software Engineering; Tracking,Codes (symbols); Software design; Surface discharges; Agile methods; Agile software development projects; Cyclomatic complexity; Empirical studies; EXtreme Programming; Lines of code; Quantitative and qualitative methods; Software development projects; Software engineering
Fábio Kon,A middleware for experimentation on dynamic adaptation,2005,https://www.scopus.com/inward/record.uri?eid=2-s2.0-77954440524&doi=10.1145%2f1101516.1101519&partnerID=40&md5=d4e8aa15d75b30efc51b98995c6a6b65,Universidade de São Paulo - Departamento de Ciência da Computação,"This paper presents OiL, an adaptive middleware that aims at supporting experimentation with different models and techniques for dynamic adaptation of distributed systems. OiL is a CORBA implementation written completely in Lua, an interpreted language with several reflective and data description facilities. In addition to the support for dynamic adaptation, OiL was designed to be deployed on a wide range of platforms, from server machines to PDAs and mobile phones, enabling experimentation in different applications scenarios. In this paper, we report the results already achieved in this project and discuss future directions. Copyright 2005 ACM.",adaptive middleware; CORBA; dynamic adaptation; programming abstractions; reflective middleware,Adaptive middleware; Distributed systems; Dynamic adaptations; Future directions; Interpreted languages; ON dynamics; Programming abstractions; Reflective middleware; Server machines; Abstracting; Computer programming; Middleware; Telecommunication equipment; Experiments
Fábio Kon,Portable checkpointing and communication for BSP applications on dynamic heterogeneous Grid environments,2005,https://www.scopus.com/inward/record.uri?eid=2-s2.0-33750020806&doi=10.1109%2fCAHPC.2005.33&partnerID=40&md5=3d1a031d1ef1724c22686d6dad90f777,Universidade de São Paulo - Departamento de Ciência da Computação,"Executing long-running parallel applications in Opportunistic Grid environments composed of heterogeneous, shared user workstations, is a daunting task. Machines may fail, become unaccessible, or may switch from idle to busy unexpectedly, compromising the execution of applications. A mechanism for fault-tolerance that supports these heterogeneous architectures is an important requirement for such a system. In this paper, we describe the support for fault-tolerant execution of BSP parallel applications on heterogeneous, shared workstations. A precompiler instruments application source code to save state periodically into checkpoint files. In case of failure, it is possible to recover the stored state from these files. Generated checkpoints are portable and can be recovered in a machine of different architecture, with data representation conversions being performed at recovery time. The precompiler also modifies BSP parallel applications to allow execution on a Grid composed of machines with different architectures. We implemented a monitoring and recovering infrastructure in the InteGrade Grid middleware. Experimental results evaluate the over-head incurred and the viability of using this approach in a Grid environment. © 2005 IEEE.",,Communication systems; Computer architecture; Computer workstations; Fault tolerant computer systems; Middleware; Parallel processing systems; Program compilers; Portable checkpointing; Precompiler; Save state; Source code; Computer networks
Fábio Kon,The implementation of the BSP parallel computing model on the InteGrade grid middleware,2005,https://www.scopus.com/inward/record.uri?eid=2-s2.0-77954444442&doi=10.1145%2f1101499.1101504&partnerID=40&md5=a57ec8270a7ec210f9eb002341339e3a,Universidade de São Paulo - Departamento de Ciência da Computação,"InteGrade is an object-oriented grid middleware infrastructure whose goal is to leverage existing computational resources in organizations. Rather than relying on dedicated hardware such as reserved clusters, InteGrade focuses on using desktops in users' offices, machines in computer laboratories, shared workstations, as well as dedicated clusters. In this paper, we describe the support for the execution of highly coupled parallel applications on top of InteGrade. The paper describes the implementation of the middleware to support BSP parallel applications (with global synchronization points), and presents experimental results. Copyright 2005 ACM.",BSP; grid computing; parallel computing; Parallel Computing Library,Computational resources; Computer laboratory; Dedicated hardware; Global synchronization; GRID middleware; Object oriented; Parallel application; Parallel Computing; Parallel Computing Library; Parallel computing models; Computer hardware; Computer workstations; Grid computing; Parallel architectures; Middleware
Fábio Kon,An open-source platform for musical room acoustics research,2005,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873826399&partnerID=40&md5=6623439774b7b1fb8bb90841c01764ca,Universidade de São Paulo - Departamento de Ciência da Computação,"AcMus is an ongoing project to develop a software for estimation, measurement, analysis, and simulation of rooms specially designed for musical performance. The system under development is organized in modules. All modules shall be integrated in a way as to allow seamless flow of data regardless of the variety of data types and structures involved in the system. Portability and accessibility of the software developed have been major concerns in the implementation of the system and, for this reason, it has been developed as an open source project, so that users and software developers from different groups can collaborate with its further improvement. The measurement system is based on the sine sweep method and provides tools for the acoustic optimization of rooms designed for musical performance. It also provides a toolbox to help with the analysis and design of environments such as music halls, lecture rooms, etc. for the specific use of music appreciation. The system core is being implemented in Java, with great care to make it platform neutral. The implementation is based on the sophisticated Eclipse Platform (www.eclipse.org), which will facilitate the system's extensibility and flexibility, enabling the construction of an open platform for Acoustics experimentation, freely available to researchers in the field.",,Acoustic optimization; Analysis and design; Data type; Flow of data; Measurement system; Musical performance; Open source projects; Open-source; Room acoustics; Software developer; Sweep method; Acoustic noise; Acoustics; Architectural acoustics; Computer software portability; Open systems
Fábio Kon,Strategies for storage of checkpointing data using non-dedicated repositories on Grid systems,2005,https://www.scopus.com/inward/record.uri?eid=2-s2.0-77954452331&doi=10.1145%2f1101499.1101500&partnerID=40&md5=7649d7c4f1e52f50a7375804ebad7a5e,Universidade de São Paulo - Departamento de Ciência da Computação,"Dealing with the large amounts of data generated by long-running parallel applications is one of the most challenging aspects of Grid Computing. Periodic checkpoints might be taken to guarantee application progression, producing even more data. The classical approach is to employ high-throughput checkpoint servers connected to the computational nodes by high speed networks. In the case of Opportunistic Grid Computing, we do not want to be forced to rely on such dedicated hardware. Instead, we want to use the shared Grid nodes to store application data in a distributed fashion.In this work, we evaluate several strategies to store checkpoints on distributed non-dedicated repositories. We consider the tradeoff among computational overhead, storage overhead, and degree of fault-tolerance of these strategies. We compare the use of replication, parity information, and information dispersal (IDA). We used InteGrade, an object-oriented Grid middleware, to implement the storage strategies and perform evaluation experiments. Copyright 2005 ACM.",checkpointing; data coding; distributed storage; fault-tolerance; grid computing,Application data; Check pointing; Classical approach; Computational nodes; Computational overheads; Data coding; Dedicated hardware; Distributed storage; Evaluation experiments; GRID middleware; Grid node; Grid systems; High-throughput; Information dispersal; Large amounts of data; Object oriented; Parallel application; Parity information; Storage overhead; Fault tolerance; Grid computing; Middleware; Security of data; Quality assurance
Fábio Kon,XP south of the equator: An eXPerience implementing XP in Brazil,2005,https://www.scopus.com/inward/record.uri?eid=2-s2.0-26444505439&partnerID=40&md5=8557a9c30fe956cdf1c40de1a61636d6,Universidade de São Paulo - Departamento de Ciência da Computação,"Many have reported successful experiences using XP, but we have not yet seen many experiences adapting agile methodologies in developing countries such as Brazil. In a developing economy, embracing change is extremely necessary. This paper relates our experience successfully introducing XP in a start-up company in Brazil. We will cover our adaptations of XP practices and how cultural and economical aspects of the Brazilian society affected our adoption of the methodology. We will discuss how we managed to effectively coach a team that had little or no previous skill of the technologies and practices adopted. We will also cover some new practices that we introduced mid-project and some practices we believe emerged mostly because of Brazilian culture. The lessons we learned may be applicable in other developing countries. © Springer-Verlag Berlin Heidelberg 2005.",,Brazil; Computer operating systems - XP; Developing countries; Economic and social effects; Computer software
Fábio Kon,"Design, implementation, and performance of an automatic configuration service for distributed component systems",2005,https://www.scopus.com/inward/record.uri?eid=2-s2.0-20444411927&doi=10.1002%2fspe.654&partnerID=40&md5=f67d6d2864e2a98698291785faa71d21,Universidade de São Paulo - Departamento de Ciência da Computação,"Component technology promotes code reuse by enabling the construction of complex applications by assembling off-the-shelf components. However, components depend on certain characteristics of the environment in which they execute. They depend on other software components and on hardware resources. In existing component architectures, the application developer is left with the task of resolving those dependencies, i.e. making sure that each component has access to all the resources it needs and that all the required components are loaded. Nevertheless, according to encapsulation principles, developers should not be aware of the component internals. Thus, it may be difficult to find out what a component really needs. In complex systems, such as the ones found in modern distributed environments, this manual approach to dependency management can lead to disastrous results. Current systems rely heavily on manual configuration by users and system administrators. This is tolerable now, when users have to manage a few computers. But, in the near future, people will have to deal with thousands of computing devices and it will no longer be acceptable to require the user to configure each of them. This paper presents the results of our 6 year research (from 1998 to 2003) in the area of automatic configuration, describing an integrated architecture for managing dependencies in distributed component-based systems. The architecture supports automatic configuration and dynamic resource management in distributed heterogeneous environments. We describe a concrete implementation of this architecture, present experimental results, and compare our approach to other works in the area. Copyright © 2005 John Wiley & Sons, Ltd.",Automatic configuration; Component-based systems; CORBA; Dynamic configuration,Automation; Codes (symbols); Computer architecture; Computer programming languages; Computer software; Large scale systems; Mobile computing; Automatic configuration; Component-based systems; CORBA; Dynamic configuration; Distributed computer systems
Fábio Kon,Message from the advanced workshops chair,2004,https://www.scopus.com/inward/record.uri?eid=2-s2.0-77953017369&partnerID=40&md5=079611d9ad8d810e316e7374cfc4bbee,,[No abstract available],,
Fábio Kon,Message from the advanced workshops chair,2004,https://www.scopus.com/inward/record.uri?eid=2-s2.0-77952967219&partnerID=40&md5=dc0f911d7d09fed2be6fb6d5a6e072de,,[No abstract available],,
Fábio Kon,Message from the advanced workshops chair,2004,https://www.scopus.com/inward/record.uri?eid=2-s2.0-77952974883&partnerID=40&md5=6378c7e94e0275f22d87f2ab4781a1fe,,[No abstract available],,
Fábio Kon,A mobile agent infrastructure for QoS negotiation of adaptive distributed applications,2004,https://www.scopus.com/inward/record.uri?eid=2-s2.0-33645386889&partnerID=40&md5=541721d49cdc1c2257fe6133285db956,Universidade de São Paulo - Departamento de Ciência da Computação,"QoS-aware distributed applications such as certain Multimedia and Ubiquitous Computing applications can benefit greatly from the provision of QoS guarantees from the underlying system and middleware infrastructure. They must avoid execution glitches that affect the user's perception of the application output. Most research in QoS support for distributed systems focuses on three aspects of QoS management: admission control, resource reservation, and scheduling. However, in highly dynamic distributed environments, effective means for QoS negotiation and re-negotiation are also essential. We believe that mobile agents, due to its inherent flexibility and agility, can play an important role in this scenario, specially during the application adaptation process. We designed a mobile-agent-based infrastructure that provides services such as resource monitoring, QoS brokering, and QoS enforcement. Furthermore, our infrastructure offers a powerful mechanism for QoS negotiation. In this paper, we describe the architecture and prototype implementation of this infrastructure. First, we discuss the motivations and related works. We, then, present the architectural design and discuss implementation issues concerning the infrastructure prototype. Finally, we introduce a sample application called ReflectorAglet - a QoS-aware adaptive audio reflector - and present preliminary experimental results. © Springer-Verlag 2004.",,Distributed computer systems; Distributed database systems; Internet; Middleware; Multi agent systems; Quality of service; Scheduling; Semantic Web; Semantics; Ubiquitous computing; Agent infrastructure; Application adaptation; Computing applications; Distributed applications; Distributed environments; Middleware infrastructure; Prototype implementations; Resource reservations; Mobile agents
Fábio Kon,Mobile musical agents - The Andante project,2004,https://www.scopus.com/inward/record.uri?eid=2-s2.0-79951760216&doi=10.1145%2f1028664.1028752&partnerID=40&md5=a08595abb84a6d0e244a6c65d0a9e0fe,Universidade de São Paulo - Departamento de Ciência da Computação,"We investigate the use of mobile agents for the creation of music within a distributed computing environment. We believe this technology has the potential to foster new ways of making music. This poster presents Andante, an object-oriented, open-source infrastructure for building distributed musical applications based on mobile agents.",Computer music; Distributed music; Mobile agents,Distributed computing environment; Distributed music; Object oriented; Open-source; Computer music; Computer systems programming; Object oriented programming; Mobile agents
Fábio Kon,Checkpointing-based rollback recovery for parallel applications on the InteGrade grid middleware,2004,https://www.scopus.com/inward/record.uri?eid=2-s2.0-77952975508&doi=10.1145%2f1028493.1028499&partnerID=40&md5=9198555d12fcfd079ecd09ed31c6431d,Universidade de São Paulo - Departamento de Ciência da Computação,"InteGrade is a grid middleware infrastructure that enables the use of idle computing power from user workstations. One of its goals is to support the execution of long-running parallel applications that present a considerable amount of communication among application nodes. However, in an environment composed of shared user workstations spread across many different LANs, machines may fail, become unaccessible, or may switch from idle to busy very rapidly, compromising the execution of the parallel application in some of its nodes. Thus, to provide some mechanism for fault-tolerance becomes a major requirement for such a system. In this paper, we describe the support for checkpoint-based rollback recovery of parallel BSP applications running over the InteGrade middleware. This mechanism consists of periodically saving application state to permit to restart its execution from an intermediate execution point in case of failure. A precompiler automatically instruments the source-code of a C/C++ application, adding code for saving and recovering application state. A failure detector monitors the application execution. In case of failure, the application is restarted from the last saved global check-point. Copyright 2004 ACM.",BSP; Checkpointing; Fault-tolerance; Grid computing,Application execution; Check points; Checkpointing; Computing power; Failure Detectors; GRID middleware; Parallel application; Rollback recovery; Fault tolerance; Middleware; Quality assurance; Grid computing
Fábio Kon,Integrade: Object-oriented Grid middleware leveraging the idle computing power of desktop machines,2004,https://www.scopus.com/inward/record.uri?eid=2-s2.0-2342428885&doi=10.1002%2fcpe.824&partnerID=40&md5=4560c8eca2bf0123e5889f1bcd55e847,Universidade de São Paulo - Departamento de Ciência da Computação,"Grid computing technology improves the computing experiences at organizations by effectively integrating distributed computing resources. However, just a small fraction of currently available Grid infrastructures focuses on reutilization of existing commodity computing resources. This paper introduces InteGrade, a novel object-oriented middleware Grid infrastructure that focuses on leveraging the idle computing power of shared desktop machines. Its features include support for a wide range of parallel applications and mechanisms to assure that the owners of shared resources do not perceive any loss in the quality of service. A prototype implementation is under construction and the current version is available for download. Copyright © 2004 John Wiley & Sons, Ltd.",CORBA; Distributed object systems; Grid computing; Usage pattern analysis,Computer architecture; Computer simulation; Distributed computer systems; Middleware; Personal computers; Probability; Quality of service; Time series analysis; CORBA; Distributed object systems; Grid computing; Usage pattern analysis; Object oriented programming
Fábio Kon,Adaptive software systems,2004,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942761880&doi=10.1007%2fBF03192349&partnerID=40&md5=24917b3f06bc2a1271e7f03b32858cb9,Universidade de São Paulo - Departamento de Ciência da Computação,[No abstract available],,
Fábio Kon,Being Extreme in the classroom: Experiences teaching XP,2004,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942792346&doi=10.1007%2fBF03192356&partnerID=40&md5=6f65be4cfc4b17fed40478578798f5cd,Universidade de São Paulo - Departamento de Ciência da Computação,"Agile Methods propose a new way of looking at software development that questions many of the beliefs of conventional Software Engineering. Agile methods such as Extreme Programming (XP) have been very effective in producing high-quality software in real-world projects with strict time constraints. Nevertheless, most university courses and industrial training programs are still based on old-style heavyweight methods. This article, based on our experiences teaching XP in academic and industrial environments, presents effective ways of teaching students and professionals on how to develop high-quality software following the principles of agile software development. We also discuss related work in the area, describe real-world cases, and discuss open problems not yet resolved. © 2005, The Brazilian Computer Society.",,Software engineering; Teaching; Agile software development; EXtreme Programming; High-quality software; Industrial environments; Industrial training; Real world projects; Time constraints; University course; Software design
Fábio Kon,Developing adaptive distributed applications: A framework overview and experimental results,2003,https://www.scopus.com/inward/record.uri?eid=2-s2.0-0242460321&partnerID=40&md5=cb34d5c0394e3277cb0b1499dbfcecf1,Universidade de São Paulo - Departamento de Ciência da Computação,"Building self-adaptive applications is a complex and challenging task. Developers must consider several issues in addition to the implementation of the application-specific functionalities. These issues include the selection of which environment elements must be monitored for detecting when adaptations should take place, how to perform the monitoring, which software adaptations should be carried out, and when should they take place. Our work aims at reducing the complexity of building adaptive distributed applications. To achieve this, we developed an object-oriented framework that provides a set of integrated tools for monitoring resource usage and component interactions, detecting composite events, and reconfiguring distributed applications. This paper describes the framework model and how it was used to incorporate adaptive mechanisms to a distributed information service for mobile users. It also presents several results obtained through the execution of a set of simulated scenarios. The results indicate that, besides detecting resource availability fluctuations, it is also important to monitor the interactions between application components, looking for patterns that indicate the necessity to perform dynamic adaptation. We drive conclusions about the applicability of using the framework for the design and implementation of adaptive distributed applications. © Springer-Verlag Berlin Heidelberg 2003.",,Information services; Multi agent systems; Object oriented programming; Semantic Web; Semantics; Application components; Component interaction; Design and implementations; Distributed applications; Distributed information services; Object-oriented frameworks; Resource availability; Self-adaptive applications; Distributed database systems
Fábio Kon,The Case for Reflective Middleware,2002,https://www.scopus.com/inward/record.uri?eid=2-s2.0-0013362230&partnerID=40&md5=46877437977086bb5a52e24253ea988d,Universidade de São Paulo - Departamento de Ciência da Computação,"It's flexible and reconfigurable yet simple for programmers to use, notably for building dynamic distributed applications operating on the net.",,
Fábio Kon,Adaptive directory services for highly dynamic environments,2001,https://www.scopus.com/inward/record.uri?eid=2-s2.0-3242743704&partnerID=40&md5=ab67852c45aa395bf2f503adcb4f9438,Universidade de São Paulo - Departamento de Ciência da Computação,"A novel architectural framework for developing flexible, adaptive and dynamically configurable directory services is discussed. The framework is competent to meet the requirements of next-generation computer systems. The directory service addresses functional requirements such as storing the mapping and nonfunctional requirements such as fault-tolerant and dynamic load balancing through migration and replication. The new model is more scalable as it handles updates more efficiently.",,Directory servers; Directory services; Dynamic information; Mobile computers; Boolean algebra; Client server computer systems; Distributed computer systems; Java programming language; Problem solving; Servers; Software engineering; Software prototyping; User interfaces; Adaptive systems
Fábio Kon,Reflective middleware,2001,https://www.scopus.com/inward/record.uri?eid=2-s2.0-3242745944&partnerID=40&md5=7ac30718003fc7731d71351cf0734eb8,Universidade de São Paulo - Departamento de Ciência da Computação,"The various aspects of reflective middleware are discussed. Middleware has become an important architectural component in modern distributed systems. Its role is to offer users a high level, platform independent programming model and to hide problems of distribution. Development works towards reflective middleware is gaining speed as the current middleware technologies can not support the diversity of application domains of the present world. The works aim at providing a principled way to achieve openness of the underlying middleware platform.",,.NET; Black box technique; Component based programming; CORBA; DCOM; Platform independent programming; Computational methods; Computer architecture; Computer operating systems; Distributed computer systems; Embedded systems; Interfaces (computer); Java programming language; Network protocols; Object oriented programming; Real time systems; Middleware
Fábio Kon,Reflective middleware,2001,https://www.scopus.com/inward/record.uri?eid=2-s2.0-3242747455&partnerID=40&md5=9ff0a1e3bfbe1b69222d7c7641221781,Universidade de São Paulo - Departamento de Ciência da Computação,"The role of reflective middleware that has emerged as an important architectural component in modern distributed systems is discussed. Its role is to offer users a high-level, platform-independent programming model which can be object-oriented or component-based and to hide problems of distribution. Middleware technologies can be applied in a wide range of applications such as safety-critical systems, mobile and ubiquitous computing, embedded systems, real-time systems, and the computational Grid. Reflective middleware can also overcome the limitations of the black-box approach.",,Meta-object protocols; Safety-critical systems; Ubiquitous computing; Computer architecture; Distributed computer systems; Embedded systems; Java programming language; Mobile computing; Network protocols; Object oriented programming; Real time systems; Middleware
Fábio Kon,Reflective middleware: From your desk to your hand,2001,https://www.scopus.com/inward/record.uri?eid=2-s2.0-0141641262&partnerID=40&md5=3eb5899ae8ce9b41dc05faaf10f8a32b,Universidade de São Paulo - Departamento de Ciência da Computação,"The aspects related to reflective middleware implementations that allow seamless interoperation among heterogeneous devices and make it possible to dynamically adapt to changing requirements are discussed. Communication middleware simplifies the construction of component-based distributed applications. To solve the problem of inflexibility, shown by many middleware constructions, reflective middleware uses techniques proposed by Gregory Kiczales that include meta-object protocol, combining the ideas of computational reflection and object-orientation. The base level of reflective middleware addresses the application program's functionality, while the metalevel designates collections of components that form the internal architecture of these objects.",,Component-based systems; Computational models; Meta-object protocols; Reflective middleware; Computer architecture; Computer networks; Computer operating systems; Distributed computer systems; Network protocols; Quality of service; Real time systems; Resource allocation; Security of data; Telecommunication systems; Middleware
Fábio Kon,Using dynamic configuration to manage a scalable multimedia distribution system,2001,https://www.scopus.com/inward/record.uri?eid=2-s2.0-0035147743&doi=10.1016%2fS0140-3664%2800%2900293-0&partnerID=40&md5=ec94f3571c131e9d1309ca79b0d0154e,Universidade de São Paulo - Departamento de Ciência da Computação,"Multimedia applications and interfaces will change radically the way computer systems will look like in the coming years. Radio and TV broadcasting will assume a digital format and their distribution networks will be integrated to the Internet. Existing hardware and software infrastructures, however, are unable to provide all the scalability, flexibility, and quality of service (QoS) that these applications require. We present a framework for building scalable and flexible multimedia distribution systems that greatly improves the possibilities for the provision of quality of service in large-scale networks. We show how to use architectural-awareness, mobile agents, and a CORBA-based framework to support dynamic (re)configuration, efficient code distribution, and fault-tolerance. This approach can be applied not only for multimedia distribution, but also for any QoS-sensitive distributed application.",,Internet; Radio broadcasting; Telecommunication services; Television broadcasting; User interfaces; Wide area networks; Dynamic configuration; Multimedia distribution system; Quality of service (QoS); Multimedia systems
Fábio Kon,Using interpreted CompositeCalls to improve operating system services,2000,https://www.scopus.com/inward/record.uri?eid=2-s2.0-0034179992&doi=10.1002%2f%28SICI%291097-024X%28200005%2930%3a6%3c589%3a%3aAID-SPE307%3e3.0.CO%3b2-K&partnerID=40&md5=3e697b59439c6421b91111c71587ff86,Universidade de São Paulo - Departamento de Ciência da Computação,"A large number of protection domain crossings and context switches is often the cause of bad performance in complex object-oriented systems. We have identified the CompositeCall pattern which has been used to address this problem for decades. The pattern modifies the traditional client/server interaction model so that clients are able to build compound requests that are evaluated in the server domain. We implemented CompositeCalls for both a traditional OS, Linux, and an experimental object-oriented μkernel, Off++. In the first case, we learned about implications of applying CompositeCall to a non-object-oriented `legacy' system. In both experiments, we learned when CompositeCalls help improving system performance and when they do not help. In addition, our experiments gave us important insights about some pernicious design traditions extensively used in OS construction.",,Client server computer systems; Legacy systems; Object oriented programming; Context switches; Domain crossings; Computer operating systems
Fábio Kon,Dependence management in component-based distributed systems,2000,https://www.scopus.com/inward/record.uri?eid=2-s2.0-0033877390&doi=10.1109%2f4434.824310&partnerID=40&md5=c126358d5b49848fd4d791dfdf742ef9,Universidade de São Paulo - Departamento de Ciência da Computação,"A generic model for reifying dependencies in distributed component systems is introduced. Using this model, it is shown how a representation model makes it possible to develop efficient, reliable, and dynamically configurable component-based systems.",,C (programming language); Client server computer systems; Concurrency control; Java programming language; Network protocols; Security of data; User interfaces; Web browsers; Object request broker; Prerequisite description format; Quality of service; Software Package CORBA; Object oriented programming
Fábio Kon,Secure dynamic reconfiguration of scalable CORBA systems with mobile agents,2000,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944870901&partnerID=40&md5=c4b03f773a3bea601b47cea01fd5ea7a,Universidade de São Paulo - Departamento de Ciência da Computação,"As various Internet services, e-commerce, and information systems permeate our lives, their continual availability becomes a dominant issue. But continuing software evolution requires system reconfiguration. Running systems must upgrade their components or change their configuration parameters. In addition, Internet services often need to serve thousands or millions of users. This scenario raises three conflicting issues: availability, configurability, and scalability. We propose the use of mobile reconfiguration agents for the efficient, secure, and scalable dynamic reconfiguration of Internet systems. We describe a CORBA object-oriented framework that supports dynamic reconfiguration and allows customization to different kinds of computing environments ranging from PDAs and embedded systems with limited resources to powerful workstations. © Springer-Verlag Berlin Heidelberg 2000.",,Common object request broker architecture (CORBA); Dynamic models; Embedded systems; Internet; Object oriented programming; Web services; Computing environments; Configuration parameters; Dynamic re-configuration; Internet services; Internet system; Running systems; Software Evolution; System reconfiguration; Mobile agents
Fábio Kon,2K: A distributed operating system for dynamic heterogeneous environments,2000,https://www.scopus.com/inward/record.uri?eid=2-s2.0-0033684969&doi=10.1109%2fHPDC.2000.868651&partnerID=40&md5=7b674b82df1b833ddc11130b4512b240,Universidade de São Paulo - Departamento de Ciência da Computação,"The first decades of the new millennium will witness an explosive growth in the number and diversity of networked devices and portals. We foresee high degrees of mobility, heterogeneity, and interactions among computing devices connected to global networks. While previous research in distributed operating systems solved many problems related to resource management, they seldom addressed the problems of heterogeneity and dynamic adaptability. On the other hand, middleware solutions, like CORBA and Java/Jini, solve part of the heterogeneity problem by permitting seamless communication among different platforms. But, they do not address dynamic resource management and adaptability for applications requiring high-performance distributed computing. This paper presents 2K, an integrated operating system architecture that addresses the problems of resource management in heterogeneous networks, dynamic adaptability and configuration of component-based distributed applications. © 2000 IEEE.",Computer architecture; Computer science; Distributed computing; Environmental management; Explosives; Middleware; Operating systems; Portals; Power system management; Resource management,Common object request broker architecture (CORBA); Computer architecture; Computer operating systems; Computer resource management; Computer science; Environmental management; Explosives; Heterogeneous networks; Memory architecture; Middleware; Natural resources management; Network architecture; Portals; Resource allocation; Algorithms; Computer architecture; Computer operating systems; Congestion control (communication); Object oriented programming; Resource allocation; User interfaces; Component based distributed applications; Distributed operating systems; Dynamic resource management; Heterogeneous environments; High-performance distributed computing; Power system management; Resource management; Seamless communication; Distributed computer systems; Distributed computer systems; Common object request broker architecture; Distributed operating system; Dynamic resource management
Fábio Kon,"Monitoring, security, and dynamic configuration with the dynamic TAO reflective ORB",2000,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944073206&partnerID=40&md5=cd0a896b94a48b0e4f14170fd3dc3687,Universidade de São Paulo - Departamento de Ciência da Computação,"Conventional middleware systems fail to address important issues related to dynamism. Modern computer systems have to deal not only with heterogeneity in the underlying hardware and software platforms but also with highly dynamic environments. Mobile and distributed applications are greatly affected by dynamic changes of the environment characteristics such as security constraints and resource availability. Existing middleware is not prepared to react to these changes. In many cases, application developers know when adaptive changes in communication and security strategies would improve system performance. But often, they are not able to benefit from it because the middleware lacks the mechanisms to support monitoring (to detect when adaptation should take place) and on-the-fly reconfiguration. dynamicTAO is a CORBA-compliant reflective ORB that supports dynamic configuration. It maintains an explicit representation of its own internal structure and uses it to carry out runtime customization safely. After describing dynamicTAO’s design and implementation, we discuss our experience on the development of two systems benefiting from the reflective nature of our ORB: a flexible monitoring system for distributed objects and a mechanism for enforcing access control based on dynamic security policies. © Springer-Verlag Berlin Heidelberg 2000.",,Access control; Computer hardware; Distributed parameter networks; Middleware; Network security; Application developers; Design and implementations; Distributed applications; Dynamic configuration; Environment characteristic; Explicit representation; Hardware and software; Modern computer systems; Dynamics
Fábio Kon,Towards a grand unified framework for mobile objects,1998,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947998579&partnerID=40&md5=b6cee779ff3f5b233e9da64aeb7e19b2,Universidade de São Paulo - Departamento de Ciência da Computação,[No abstract available],,
Fábio Kon,"2K: A reflective, component-based operating system for rapidly changing environments",1998,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947901679&partnerID=40&md5=4be4355024eb4768917163689e211e88,Universidade de São Paulo - Departamento de Ciência da Computação,"Modern computing environments face both low-frequency infrastructural changes, such as software and hardware upgrades, and frequent changes, such as fluctuations in the network bandwidth and CPU load. However, existing operating systems are not designed to cope with rapidly changing environments. They provide no mechanism to permit the insertion of self-adapting components that can optimize system performance according to diversity, software and hardware changes, and variations in the environment. They are not designed to accommodate dynamic updates of software, or to deal with component inter-dependence. This paper describes the philosophy behind 2K, a reflective, component-based operating system, and shows how it can be used to manage dynamism in modern computer environments. © Springer-Verlag Berlin Heidelberg 1998.",,Computer hardware; Hardware; Object oriented programming; Changing environment; Component based; Computer environments; Computing environments; Dynamic update; Inter-dependences; Network bandwidth; Software and hardwares; Computer operating systems
